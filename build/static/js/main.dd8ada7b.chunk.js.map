{"version":3,"sources":["store/app/slice.ts","services/localStorageService.ts","services/request.ts","store/wordsSet/slice.ts","services/dates.ts","store/wordsSet/service.ts","store/wordsSet/sagas.ts","store/user/slice.ts","store/user/sagas.ts","store/user/selectors.ts","shared/styles/general.ts","shared/components/UnderMenu/elements.tsx","shared/components/UnderMenu/UnderMenu.tsx","shared/components/TextButton/elements.tsx","shared/components/TextButton/index.ts","shared/components/TextButton/TextButton.tsx","shared/components/ZIndexLayer/elements.tsx","shared/components/ZIndexLayer/index.ts","shared/components/ZIndexLayer/ZIndexLayer.tsx","shared/components/DropDownMenu/elements.tsx","shared/components/DropDownMenu/index.ts","shared/components/DropDownMenu/DropDownMenu.tsx","shared/components/Input/elements.tsx","shared/components/Input/index.ts","shared/components/Input/Input.tsx","shared/hooks/keyHandler.ts","shared/components/Modal/elements.tsx","shared/components/Modal/index.ts","shared/components/Modal/Modal.tsx","shared/components/Select/elements.tsx","shared/components/Select/index.ts","shared/components/Select/Select.tsx","shared/components/Card/elements.tsx","shared/components/Card/index.ts","shared/components/Card/Card.tsx","shared/assets/icons/dots.svg","shared/assets/icons/copy.svg","shared/assets/icons/transfer.svg","shared/components/FlipCard/elements.tsx","shared/components/FlipCard/index.ts","shared/components/FlipCard/FlipCard.tsx","components/LoginPage/elements.tsx","components/LoginPage/loginSchema.ts","components/LoginPage/LoginPage.tsx","components/LoginPage/LoginPageContainer.tsx","store/wordsSet/selectors.ts","store/wordsSet/types.ts","components/SetsPage/elements.tsx","components/SetsPage/SetCard.tsx","components/SetsPage/SetsPage.tsx","components/SetsPage/SetsPageContainer.tsx","components/SetPage/elements.tsx","components/SetPage/schemas.ts","components/SetPage/CopyToSetForm.tsx","components/SetPage/SetInfo.tsx","components/SetPage/WordsBlockHeader.tsx","components/SetPage/SetPage.tsx","components/Main/routes-config.ts","components/SetPage/SetPageContainer.tsx","shared/assets/icons/add-in-circle.svg","components/Header/elements.tsx","shared/assets/icons/user.svg","shared/components/DropDownMenu/DropDownMenuItem.tsx","components/Header/AddForms/elements.tsx","components/Header/AddForms/schemas.ts","components/Header/AddForms/AddSetForm.tsx","components/Header/AddForms/AddWordForm.tsx","components/Header/Header.tsx","components/Header/index.ts","components/Header/HeaderContainer.tsx","store/app/selectors.ts","components/Snackbar/elements.tsx","components/Snackbar/Snackbar.tsx","components/Snackbar/index.ts","components/Snackbar/SnackbarContainer.tsx","components/Main/Main.tsx","store/middlewares/logger.ts","store/root-reducer.ts","store/sagas.ts","store/store.ts","App.tsx","reportWebVitals.js","index.js"],"names":["initialState","snackbar","text","isOpened","isSuccess","appSlice","createSlice","name","reducers","setSnackbar","state","payload","resetSnackbar","actions","setSnackbarAction","resetSnackbarAction","appReducer","reducer","TOKEN_KEY","getToken","window","localStorage","getItem","requestAPI","url","body","options","host","process","headers","Headers","append","token","fetchOptions","JSON","stringify","fetch","then","response","json","catch","err","console","error","handleResponseSnackbar","resp","msg","wordsSetSlice","setsOfUser","selectedSet","setWordsSetOfCurrentUSer","setSelectedWordSet","setWordsSetOfCurrentUSerAction","setSelectedWordSetAction","wordsSetReducer","transformDate","date","moment","format","transformWordsSetFromService","wordsSet","createdAt","updatedAt","lastRepetition","createWordsSet","loadAllUserSets","loadSelectedSet","createWord","copyToSet","removeFromSet","createWordsSetAction","createAction","createWordAction","loadAllUserSetsAction","loadSelectedSetAction","copyToSetAction","removeFromSetAction","call","method","put","data","map","id","wordId","setId","takeEvery","_id","email","firstName","lastName","isAuth","userSlice","setUser","resetUser","setUserAction","resetUserAction","userReducer","loadUser","loginUser","logoutUser","loadUserAction","loginUserAction","logoutUserAction","setItem","user","removeItem","selectUserSlice","store","selectCurrentUserFullName","createSelector","selectIsAuth","menuAppearing","keyframes","UnderMenuContainerElement","styled","div","UnderMenuItemTextElement","span","UnderMenuItemElement","generalStyles","FullUnderMenuContainerElement","MainContainerElement","UnderMenu","innerMenu","children","isMenuOpened","className","TextButtonElement","props","disabled","TextLinkElement","Link","ExternalTextLinkElement","a","TextButton","onClick","isExternalLink","optimizedOnClick","useCallback","e","target","href","to","LayerElement","ZIndexLayer","IconContainerElement","DropDownHeaderTextElement","DropDownHeaderElement","DropDownHeaderContainerElement","DropDownMenuContainerElement","DropDownMenuItemElement","DropDownMenu","icon","headerText","useState","opened","setOpened","dropDownRef","useRef","toggleOpened","closeDropdownIfOpened","ref","InputContainerElement","LabelElement","label","isWithValue","isError","InputElement","input","InputErrorElement","Input","onChange","onBlur","type","parentValue","value","onChangeValue","onBlurValue","setValue","textInput","handleChange","useEffect","handleBlur","idParam","useMemo","nameParam","typeParam","labelClick","current","focus","defaultValue","useKeyboardEvent","key","callback","updateArray","handler","event","addEventListener","removeEventListener","length","ModalContainerWrapperElement","ModalContainerElement","ModalTitleContainerElement","ButtonsContainerElement","Modal","title","onSave","externalIsOpened","onClickOutside","onCancelClick","onEsc","setIsOpened","outsideClickHandler","onCancelClickHandler","SelectElement","select","SelectErrorElement","Select","CardContainerElement","TitleContainerElement","ContentContainerElement","ExtraTextContainerElement","Card","extraText","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgDots","_ref","svgRef","titleId","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","ForwardRef","SvgCopy","style","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","SvgTransfer","SceneElement","CardElement","isFlipped","CardFace","CardFaceFrontElement","CardFaceBackElement","DotIconElement","DotIcon","CopyIconElement","CopyIcon","TransferIconElement","TransferIcon","FlipCard","frontText","backText","handleIconClick","setIsFlipped","onIconClick","stopPropagation","status","LoginWrapperElement","LoginInputsWrapperElement","TitleElement","h1","InputFormElement","form","loginSchema","password","loginValidate","values","errors","LoginPage","sendLoginData","loginUserWrapper","initialValues","onSubmit","validate","touched","handleSubmit","LoginPageContainer","dispatch","useDispatch","selecWordsSetSlice","selectCurrentUserSetList","selectCurrentUserSetShortList","selectSelectedWordsSet","selectSelectedWordsSetCreatedAt","selectSelectedWordsSetUpdatedAt","selectSelectedWordsSetName","selectSelectedWordsSetDescription","description","selectSelectedWordsSetWordList","words","WordSetTypes","SetDescriptionElement","SetsContainerElement","SetCardContainerElement","LinkElement","SetCard","userSet","SetsPage","userSets","customUserSets","filter","setType","systemUserSets","SetsPageContainer","useSelector","FirstInfoContainerElement","FieldFirstContainerElement","DescriptionBlockContainerElement","WordsContainerElement","WordCardContainerElement","WordBlockHeaderContainerElement","LanguagesContainerElement","CopyToSetFormContainerElement","CopyToSetFormElement","NoWordsElement","copyToSetValidate","copyToSetSchema","CopyToSetForm","toggleStatus","setsList","handleSave","autoComplete","hidden","SetInfo","WordsBlockHeader","language","handleChangeLanguage","wordsLength","onChangeLanguage","lang","SetPage","currentSetId","openedMenuStatus","setOpenedMenuStatus","isModalOpened","setIsModalOpened","setLanguage","changeLanguage","frontKey","backKey","closeMenu","onClickCopyTo","toggleModalStatus","closeModal","onClickSaveToCopy","onClickRemoveFromSet","word","appNotAuthRoutes","path","component","appAuthRoutes","useParams","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgAddInCircle","fill","HeaderElement","header","RightContainerElement","AddInCircle","SvgUser","DropDownMenuItem","AddFormElement","AddFormConatinerElement","TranslationBlockElement","addSetSchema","addWordSchema","rus","eng","addSetValidate","addWordValidate","AddSetForm","AddWordForm","replace","Header","currentUserName","onLogout","onAddSet","onAddWord","isAddWordOpened","setIsAddWordOpened","isAddSetOpened","setIsAddSetOpened","toggleAddWordOpenedStatus","toggleAddSetOpenedStatus","closeAddWordModal","closeAddSetModal","openAddWordModal","openAddSetModal","handleSaveSet","handleSaveWord","HeaderContainer","currentUserShortSetsList","selectSnackbar","app","selectIsSnackbarOpened","selectIsSnackbarSuccess","selectSnackbarText","snackBarAppearing","SnackbarElement","Snackbar","SnackbarContainer","clickHandler","setTimeout","MainWrapper","MainContentElement","BacgrkoundLettersElement","Main","item","exact","logger","next","action","group","info","result","log","getState","groupEnd","sagas","all","userSagas","wordsSetSagas","sagaMiddleware","createSagaMiddleware","preloadedState","configureStore","rootReducer","middleware","loggerMiddleware","getDefaultMiddleware","run","configureAppStore","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd8ada7b.chunk.js","sourcesContent":["import { ISnackbar } from './types';\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IAppState {\r\n    snackbar: ISnackbar;\r\n};\r\n\r\nconst initialState: IAppState = {\r\n    snackbar: {\r\n        text: '',\r\n        isOpened: false,\r\n        isSuccess: false,\r\n    }\r\n}\r\n\r\nconst appSlice = createSlice({\r\n    name: 'app',\r\n    initialState,\r\n    reducers: {\r\n        setSnackbar(state, { payload }: PayloadAction<ISnackbar>) {\r\n            state.snackbar = payload;\r\n        },\r\n        resetSnackbar(state) {\r\n            state.snackbar = initialState.snackbar;\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    setSnackbar: setSnackbarAction,\r\n    resetSnackbar: resetSnackbarAction,\r\n} = appSlice.actions;\r\n\r\nexport const { reducer: appReducer } = appSlice;","const TOKEN_KEY = \"WORDS_TOKEN\";\r\n\r\nexport const setToken = (token: string) => {\r\n    window.localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport const getToken = (): string | null => window.localStorage.getItem(TOKEN_KEY);\r\n\r\nexport const removeToken = (): void =>\r\n    window.localStorage.removeItem(TOKEN_KEY);\r\n","import { Action } from '@reduxjs/toolkit';\r\nimport { setSnackbarAction } from '../store/app/slice';\r\nimport { getToken } from './localStorageService';\r\n\r\n\r\nexport interface IRequestParams {\r\n    body?: any;\r\n    headers?: Headers;\r\n    method?: 'POST' | 'GET' | 'PUT' | 'DELETE' | 'PATCH',\r\n}\r\n\r\n\r\nexport interface IResponse<T> {\r\n    data: T;\r\n    error?: string;\r\n    msg?: string;\r\n}\r\n\r\n// add T to here\r\nexport const requestAPI = (url: string, { body, ...options }: IRequestParams = {}) => {\r\n    const host = process.env.REACT_APP_API || 'http://192.168.100.6:8000';\r\n    // const host = 'http://localhost:8000';\r\n    const headers = new Headers(options.headers);\r\n    headers.append('Content-Type', 'application/json');\r\n    const token = getToken();\r\n    headers.append('Authorization', `Bearer ${token}`);\r\n    const fetchOptions: RequestInit = {\r\n        // mode: 'cors',\r\n        headers,\r\n        body: body ? JSON.stringify(body) : null,\r\n        ...options,\r\n    };\r\n\r\n    return window\r\n        .fetch(host + url, fetchOptions)\r\n        // return response.ok ? response.json() : Promise.reject(response);\r\n        .then((response) => response.json())\r\n        .then((response) => response)\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nexport const handleResponseSnackbar = (resp: IResponse<any>): Action => {\r\n    if (!resp) {\r\n        return setSnackbarAction({\r\n            isSuccess: false,\r\n            text: 'Something went wrong',\r\n            isOpened: true,\r\n        })\r\n    }\r\n\r\n    const isSuccess = !!resp?.msg;\r\n    return setSnackbarAction({\r\n        isSuccess,\r\n        text: (isSuccess ? resp.msg : resp.error) || '',\r\n        isOpened: true,\r\n    })\r\n}\r\n\r\nexport default {};","import { IWordsSet, IWordsServerSet, IFullWordsServerSet } from './types';\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IWordsSetState {\r\n    setsOfUser: Array<IWordsServerSet>;\r\n    selectedSet: IFullWordsServerSet | null;\r\n};\r\n\r\nconst initialState: IWordsSetState = {\r\n    setsOfUser: [],\r\n    selectedSet: null,\r\n}\r\n\r\nconst wordsSetSlice = createSlice({\r\n    name: 'wordsSet',\r\n    initialState,\r\n    reducers: {\r\n        setWordsSetOfCurrentUSer(state, { payload }: PayloadAction<Array<IWordsServerSet>>) {\r\n            state.setsOfUser = payload;\r\n        },\r\n        setSelectedWordSet(state, { payload }: PayloadAction<IFullWordsServerSet>) {\r\n            state.selectedSet = payload;\r\n        }\r\n    },\r\n})\r\n\r\nexport const {\r\n    setWordsSetOfCurrentUSer: setWordsSetOfCurrentUSerAction,\r\n    setSelectedWordSet: setSelectedWordSetAction,\r\n} = wordsSetSlice.actions;\r\n\r\nexport const { reducer: wordsSetReducer } = wordsSetSlice;","import moment from 'moment';\r\n\r\nexport const transformDate = (date: string | Date): string => moment(date).format('DD/MM/YYYY, HH:mm'); ","import { transformDate } from './../../services/dates';\r\nimport { wordsSetReducer } from './slice';\r\nimport { IWordsServerSet, IFullWordsServerSet } from './types';\r\n\r\nexport const transformWordsSetFromService = (wordsSet: IWordsServerSet): IWordsServerSet => ({\r\n    ...wordsSet,\r\n    createdAt: transformDate(wordsSet.createdAt),\r\n    updatedAt: transformDate(wordsSet.updatedAt),\r\n    lastRepetition: wordsSet.lastRepetition && transformDate(wordsSet.lastRepetition),\r\n})\r\n\r\n\r\nexport const transformFullWordsSetFromService = (wordsSet: IFullWordsServerSet): IFullWordsServerSet => ({\r\n    ...wordsSet,\r\n    createdAt: transformDate(wordsSet.createdAt),\r\n    updatedAt: transformDate(wordsSet.updatedAt),\r\n    lastRepetition: wordsSet.lastRepetition && transformDate(wordsSet.lastRepetition),\r\n})","import { IWordSetCreateResponse, IWordsSet, IWordsServerSet, ILoadSelectedSetReq, IFullWordsServerSet, IWord, IWordServer, IActionWordInSetProps } from './types';\r\nimport { requestAPI, IResponse, handleResponseSnackbar } from './../../services/request';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { call, takeEvery, put } from 'redux-saga/effects';\r\nimport { setSelectedWordSetAction, setWordsSetOfCurrentUSerAction } from './slice';\r\nimport { transformFullWordsSetFromService, transformWordsSetFromService } from './service';\r\n\r\n// check\r\nexport const createWordsSetAction = createAction<IWordsSet>('wordsSet/create');\r\nexport const createWordAction = createAction<IWord>('wordsSet/createWord');\r\nexport const loadAllUserSetsAction = createAction<void>('wordsSet/load/me');\r\nexport const loadSelectedSetAction = createAction<ILoadSelectedSetReq>('wordsSet/selected');\r\nexport const copyToSetAction = createAction<IActionWordInSetProps>('wordsSet/copyToSet');\r\nexport const removeFromSetAction = createAction<IActionWordInSetProps>('wordsSet/removeFromSet');\r\n\r\nfunction* createWordsSet({ payload }: ReturnType<typeof createWordsSetAction>) {\r\n    const resp: IResponse<IWordSetCreateResponse> = yield call(requestAPI, '/sets', {\r\n        method: 'POST',\r\n        body: payload,\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\nfunction* loadAllUserSets() {\r\n    const resp: IResponse<IWordsServerSet[]> = yield call(requestAPI, '/sets/me');\r\n    if (resp?.data) {\r\n        yield put(setWordsSetOfCurrentUSerAction(resp.data.map(wordsSet => transformWordsSetFromService(wordsSet))));\r\n    }\r\n\r\n}\r\n\r\nfunction* loadSelectedSet({ payload }: ReturnType<typeof loadSelectedSetAction>) {\r\n    const resp: IResponse<IFullWordsServerSet> = yield call(requestAPI, `/words/${payload.id}`);\r\n    if (resp?.data) {\r\n        yield put(setSelectedWordSetAction(transformFullWordsSetFromService(resp.data)));\r\n    }\r\n}\r\n\r\nfunction* createWord({ payload }: ReturnType<typeof createWordAction>) {\r\n    const resp: IResponse<IWordServer> = yield call(requestAPI, '/words', {\r\n        method: 'POST',\r\n        body: payload,\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\nfunction* copyToSet({ payload }: ReturnType<typeof copyToSetAction>) {\r\n    const resp: IResponse<void> = yield call(requestAPI, `/words/${payload.wordId}/addToSet`, {\r\n        method: \"PATCH\",\r\n        body: {\r\n            setId: payload.setId,\r\n        }\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\nfunction* removeFromSet({ payload }: ReturnType<typeof copyToSetAction>) {\r\n    const resp: IResponse<void> = yield call(requestAPI, `/words/${payload.wordId}/removeSet`, {\r\n        method: \"PATCH\",\r\n        body: {\r\n            setId: payload.setId,\r\n        }\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\n\r\nexport default [\r\n    takeEvery(createWordsSetAction, createWordsSet),\r\n    takeEvery(loadAllUserSetsAction, loadAllUserSets),\r\n    takeEvery(loadSelectedSetAction, loadSelectedSet),\r\n    takeEvery(createWordAction, createWord),\r\n    takeEvery(copyToSetAction, copyToSet),\r\n    takeEvery(removeFromSetAction, removeFromSet)\r\n];","import { selectIsAuth } from './selectors';\r\nimport { IUser } from './types';\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IUserState extends IUser {\r\n    isAuth: boolean | null;\r\n};\r\n\r\nconst initialState: IUserState = {\r\n    _id: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    createdAt: '',\r\n    updatedAt: '',\r\n    isAuth: null,\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        setUser(state, { payload }: PayloadAction<IUser>) {\r\n            state._id = payload._id;\r\n            state.email = payload.email;\r\n            state.firstName = payload.firstName;\r\n            state.lastName = payload.lastName;\r\n            state.createdAt = payload.createdAt;\r\n            state.updatedAt = payload.updatedAt;\r\n            state.isAuth = true;\r\n        },\r\n        resetUser(state) {\r\n            return state = { ...initialState, isAuth: false };\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    setUser: setUserAction,\r\n    resetUser: resetUserAction,\r\n} = userSlice.actions;\r\n\r\nexport const { reducer: userReducer } = userSlice;","import { loadAllUserSetsAction } from './../wordsSet/sagas';\r\nimport { ILoginUser, ILoginUserResponse, IUser } from './types';\r\nimport { getToken, setToken, removeToken } from './../../services/localStorageService';\r\nimport { requestAPI, IResponse, handleResponseSnackbar } from './../../services/request';\r\nimport { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit';\r\nimport { call, takeEvery, put, Effect } from 'redux-saga/effects';\r\n\r\nimport { resetUserAction, setUserAction } from \"./slice\";\r\n// check\r\nexport const loadUserAction = createAction<void>('user/load');\r\nexport const loginUserAction = createAction<ILoginUser>('user/login');\r\nexport const logoutUserAction = createAction<void>('user/logout');\r\n\r\nfunction* loadUser() {\r\n    const resp: IResponse<IUser> = yield call(requestAPI, '/users/me');\r\n\r\n    if (resp?.data) {\r\n        yield put(setUserAction(resp.data));\r\n        yield put(loadAllUserSetsAction());\r\n    } else {\r\n        yield put(resetUserAction());\r\n    }\r\n}\r\n\r\nfunction* loginUser({ payload }: ReturnType<typeof loginUserAction>) {\r\n    const resp: IResponse<ILoginUserResponse> = yield call(requestAPI, '/users/auth', {\r\n        method: 'POST',\r\n        body: payload,\r\n    })\r\n\r\n    if (resp?.data) {\r\n        setToken(resp.data.token);\r\n        yield put(setUserAction(resp.data.user));\r\n    }\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n\r\n}\r\n\r\nfunction* logoutUser() {\r\n    removeToken();\r\n\r\n    yield put(resetUserAction());\r\n}\r\n\r\nexport default [\r\n    takeEvery(loadUserAction, loadUser),\r\n    takeEvery(loginUserAction, loginUser),\r\n    takeEvery(logoutUserAction, logoutUser)\r\n];","import { createSelector } from '@reduxjs/toolkit';\r\nimport { IStore } from './../root-reducer';\r\n\r\n\r\nexport const selectUserSlice = (store: IStore) => store.user;\r\n\r\nexport const selectCurrentUserFullName =\r\n    createSelector(selectUserSlice, (userSlice): string => `${userSlice.lastName} ${userSlice.firstName}`);\r\n\r\nexport const selectIsAuth =\r\n    createSelector(selectUserSlice, (userSlice): boolean | null => userSlice.isAuth);","export default {\r\n    primaryBlueColor: '#31708f',\r\n    lighterPrimaryBlueColor: '#8fc1e3',\r\n\r\n    lighterBlueBackgroundColor: '#f8f8f8',\r\n    backgroundWhiteColor: '#f7f9fb',\r\n\r\n    grayPrimaryColor: '#697865',\r\n    graySecondColor: '#E6E7EB',\r\n\r\n    errorColor: '#870D15',\r\n    errorBackground: '#FF5E5E',\r\n    errorBorder: '#69090F',\r\n\r\n    successColor: '#094926',\r\n    successBackground: '#46D37F',\r\n    successBorder: '#096935',\r\n}","import styled, { keyframes } from 'styled-components';\r\nimport generalStyles from '../../styles/general';\r\n\r\nconst menuAppearing = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nexport const UnderMenuContainerElement = styled.div`\r\n  position: absolute;\r\n  width: 200px;\r\n  min-height: 50px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  z-index: 20;\r\n  top: 60px;\r\n  padding: 10px 0px;\r\n  animation: ${menuAppearing} 0.3s;\r\n`;\r\n\r\nexport const UnderMenuItemTextElement = styled.span`\r\n`;\r\n\r\nexport const UnderMenuItemElement = styled.div`\r\n  cursor: pointer;\r\n  padding: 7px 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    ${UnderMenuItemTextElement}  {\r\n      color: ${generalStyles.lighterPrimaryBlueColor};\r\n    }\r\n\r\n    svg {\r\n      fill: ${generalStyles.lighterPrimaryBlueColor};\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const FullUnderMenuContainerElement = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const MainContainerElement = styled.div`\r\n  &.opened-menu {\r\n    z-index: 30;\r\n    position: relative;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { FullUnderMenuContainerElement, MainContainerElement, UnderMenuContainerElement, UnderMenuItemElement, UnderMenuItemTextElement } from './elements';\r\n\r\nexport interface IUnderMenuProps {\r\n    innerMenu: React.ReactNode;\r\n    isMenuOpened: boolean;\r\n}\r\n\r\nexport const UnderMenu: React.FC<IUnderMenuProps> = ({ innerMenu, children, isMenuOpened }) => {\r\n    return <FullUnderMenuContainerElement>\r\n        <MainContainerElement className={isMenuOpened ? 'opened-menu' : ''}>\r\n            {children}\r\n        </MainContainerElement>\r\n        {isMenuOpened && <UnderMenuContainerElement>\r\n            {innerMenu}\r\n        </UnderMenuContainerElement>}\r\n    </FullUnderMenuContainerElement>\r\n}","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport generalStyles from \"../../styles/general\";\r\n\r\nexport interface ITextButtonProps {\r\n    disabled: boolean;\r\n}\r\n\r\nexport const TextButtonElement = styled.span`\r\n    cursor: ${(props: ITextButtonProps) => props.disabled ? 'default' : 'pointer'};\r\n    padding: 15px;\r\n    color: ${(props: ITextButtonProps) => props.disabled ? generalStyles.grayPrimaryColor : generalStyles.primaryBlueColor};\r\n    &:hover {\r\n        color:  ${(props: ITextButtonProps) => props.disabled ? generalStyles.grayPrimaryColor : generalStyles.lighterPrimaryBlueColor};\r\n    };\r\n`;\r\n\r\n\r\nexport const TextLinkElement = styled(Link)`\r\n    text-decoration: none;\r\n    `;\r\n\r\nexport const ExternalTextLinkElement = styled.a`\r\n    text-decoration: none;\r\n    `;","import { TextButton } from './TextButton';\r\n\r\nexport default TextButton;","import React, { useCallback, useMemo } from 'react';\r\nimport { ExternalTextLinkElement, TextButtonElement, TextLinkElement } from './elements';\r\n\r\nexport interface ITextButtonProps {\r\n    text?: string;\r\n    url?: string;\r\n    onClick?: Function;\r\n    disabled?: boolean;\r\n    isExternalLink?: boolean;\r\n}\r\n\r\nexport const TextButton: React.FC<ITextButtonProps> = ({ text, url, onClick, disabled, isExternalLink }) => {\r\n    const optimizedOnClick = useCallback((e: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\r\n        if (!disabled && onClick) {\r\n            onClick(e);\r\n        }\r\n\r\n    }, [onClick, disabled]);\r\n\r\n    if (url) {\r\n\r\n        if (isExternalLink) {\r\n            return <ExternalTextLinkElement target=\"_blank\" href={url}>{text}</ExternalTextLinkElement>\r\n        }\r\n\r\n        return <TextLinkElement to={url}>{text}</TextLinkElement>\r\n    }\r\n\r\n    return <TextButtonElement disabled={!!disabled} onClick={optimizedOnClick}> {text}</ TextButtonElement >\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const LayerElement = styled.div`\r\n    background-color: black;\r\n    z-index: 10;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: 0.6;\r\n`;\r\n","import { ZIndexLayer } from './ZIndexLayer';\r\n\r\nexport default ZIndexLayer;","import { useCallback, useState } from \"react\"\r\nimport { LayerElement } from './elements';\r\n\r\nexport interface IZIndexLayerProps {\r\n    onClick?: () => void;\r\n}\r\n\r\nexport const ZIndexLayer: React.FC<IZIndexLayerProps> = ({ onClick }) => {\r\n    return <LayerElement onClick={onClick} />;\r\n}","import styled, { keyframes } from \"styled-components\";\r\nimport generalStyles from \"../../styles/general\"\r\n\r\nexport const IconContainerElement = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n`\r\n\r\nexport const DropDownHeaderTextElement = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nexport const DropDownHeaderElement = styled.div`\r\n    position: relative;\r\n`\r\n\r\nexport const DropDownHeaderContainerElement = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    padding: 5px 10px;\r\n    &:hover ${DropDownHeaderTextElement} {\r\n        color: ${generalStyles.lighterPrimaryBlueColor};\r\n    };\r\n`\r\n\r\nexport interface IDropDownMenuContainerElementProps {\r\n    isOpened?: boolean;\r\n}\r\n\r\nconst menuAppearing = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nexport const DropDownMenuContainerElement = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    top: 43px;\r\n    left: -1px; // border\r\n    z-index: 10;\r\n    background-color: white;\r\n    animation: ${menuAppearing} 0.5s;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n`\r\n\r\n\r\nexport const DropDownMenuItemElement = styled.div`\r\n    padding: 10px 2px;\r\n    width: 100%;\r\n    /* border-bottom: 1px solid ${generalStyles.lighterPrimaryBlueColor}; */\r\n\r\n    &:first-child {\r\n        margin-top: 5px;\r\n        /* border-top: 1px solid ${generalStyles.lighterPrimaryBlueColor}; */\r\n    }\r\n\r\n    &:last-child {\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        color: ${generalStyles.lighterPrimaryBlueColor};\r\n    };\r\n`","import { DropDownMenu } from './DropDownMenu';\r\n\r\nexport default DropDownMenu;","import React, { useCallback, useState, useRef } from 'react';\r\nimport { ReactComponent as UserIcon } from '../../assets/icons/user.svg';\r\nimport { useOutsideClickCheck } from '../../hooks/outsideClick';\r\nimport ZIndexLayer from '../ZIndexLayer';\r\nimport { DropDownMenuItem } from './DropDownMenuItem';\r\nimport { DropDownHeaderElement, DropDownHeaderTextElement, DropDownMenuContainerElement, IconContainerElement, DropDownHeaderContainerElement } from './elements';\r\n\r\nexport interface IDropDownMenu {\r\n    icon?: React.ReactNode,\r\n    headerText?: string;\r\n}\r\n\r\nexport const DropDownMenu: React.FC<IDropDownMenu> = ({ icon, headerText, children }) => {\r\n    const [opened, setOpened] = useState(false);\r\n    const dropDownRef = useRef(null);\r\n    const toggleOpened = useCallback(() => { setOpened(isOpened => !isOpened) }, [setOpened]);\r\n    const closeDropdownIfOpened = useCallback(() => { if (opened) { setOpened(false) } }, [setOpened, opened])\r\n\r\n    return <>\r\n        {opened && <ZIndexLayer onClick={closeDropdownIfOpened} />}\r\n        <DropDownHeaderElement ref={dropDownRef} onClick={toggleOpened}>\r\n            <DropDownHeaderContainerElement>\r\n                <IconContainerElement>\r\n                    {icon || null}\r\n                </IconContainerElement>\r\n                <DropDownHeaderTextElement>\r\n                    {headerText || ''}\r\n                </DropDownHeaderTextElement>\r\n            </DropDownHeaderContainerElement>\r\n            {opened &&\r\n                <DropDownMenuContainerElement>\r\n                    {children}\r\n                </DropDownMenuContainerElement>\r\n\r\n            }\r\n        </DropDownHeaderElement>\r\n    </>\r\n}","import styled from \"styled-components\";\r\nimport generalStyles from \"../../styles/general\";\r\n\r\nexport const InputContainerElement = styled.div`\r\n    width: 100%;\r\n    padding: 10px 0px;\r\n    position: relative;\r\n`\r\n\r\nexport interface ILabelElementProps {\r\n    isWithValue: boolean;\r\n    isError: boolean;\r\n}\r\n\r\nexport const LabelElement = styled.label`\r\n    position: absolute;\r\n    cursor: text;\r\n    top: ${(props: ILabelElementProps) => props.isWithValue ? '0px' : '25px'};\r\n    left: 10px;\r\n    transition: all 0.5s ease-in-out;\r\n    color: ${(props: ILabelElementProps) => props.isError ? generalStyles.errorColor : generalStyles.grayPrimaryColor};\r\n`\r\n\r\nexport interface IInputElementProps {\r\n    isError: boolean;\r\n}\r\n\r\n\r\nexport const InputElement = styled.input`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    border: none;\r\n    background-color: transparent;\r\n    border-bottom: 1px solid ${(props: IInputElementProps) => props.isError ? generalStyles.errorColor : generalStyles.grayPrimaryColor};\r\n    color: ${generalStyles.grayPrimaryColor};\r\n\r\n    &:focus {\r\n        outline: none;\r\n        & + ${LabelElement} {\r\n            color: ${generalStyles.primaryBlueColor};\r\n            top: 0px;      \r\n        }\r\n    }\r\n`\r\n\r\nexport const InputErrorElement = styled.div`\r\n    margin-top: 5px;\r\n    font-size: 12px;\r\n    margin-left: 10px;\r\n    color: ${generalStyles.errorColor};\r\n`","import { Input } from './Input';\r\n\r\nexport default Input;","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { InputContainerElement, InputElement, InputErrorElement, LabelElement } from './elements';\r\n\r\nexport interface IInput {\r\n    label?: string;\r\n    id?: string;\r\n    name?: string;\r\n    type?: string;\r\n    value?: string;\r\n    onChangeValue?: (value: string) => void;\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n    onBlurValue?: (value: string) => void;\r\n    error?: string;\r\n}\r\n\r\nexport const Input: React.FC<IInput> = ({\r\n    label,\r\n    name,\r\n    id,\r\n    onChange,\r\n    onBlur,\r\n    type,\r\n    value: parentValue,\r\n    onChangeValue,\r\n    onBlurValue,\r\n    error\r\n}) => {\r\n    const [value, setValue] = useState(parentValue);\r\n    const textInput = useRef(null);\r\n\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeValue && onChangeValue(e.target.value);\r\n        setValue(e.target.value);\r\n    }, [setValue, onChange]);\r\n\r\n    useEffect(() => {\r\n        setValue(parentValue);\r\n    }, [parentValue, setValue])\r\n\r\n    const handleBlur = useCallback((e: React.FocusEvent<HTMLInputElement>) => {\r\n        onBlur && onBlur(e);\r\n        onBlurValue && onBlurValue(e.target.value);\r\n    }, [onBlur]);\r\n\r\n    const idParam = useMemo(() => id ? { id } : {}, [id]);\r\n    const nameParam = useMemo(() => name ? { name } : {}, [name]);\r\n    const typeParam = useMemo(() => type ? { type } : {}, [type]);\r\n\r\n    const labelClick = useCallback(() => {\r\n        // @ts-ignore\r\n        textInput?.current?.focus();\r\n    }, [textInput]);\r\n\r\n\r\n    return <InputContainerElement>\r\n        <InputElement\r\n            isError={!!error}\r\n            {...idParam}\r\n            {...nameParam}\r\n            {...typeParam}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            defaultValue={value}\r\n            ref={textInput}\r\n        />\r\n        <LabelElement isWithValue={!!value} isError={!!error} onClick={labelClick}>{label}</LabelElement>\r\n        {error && <InputErrorElement>{error}</InputErrorElement> || null}\r\n    </InputContainerElement>\r\n}","// @ts-nocheck\r\nimport React, { useEffect } from 'react';\r\n\r\nexport function useKeyboardEvent(key: string, callback: Function, updateArray?: Array<any>) {\r\n    useEffect(() => {\r\n        const handler = function (event: React.KeyboardEvent) {\r\n            if (event.key === key) {\r\n                callback && callback();\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handler);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    }, updateArray?.length ? updateArray : []);\r\n}","import styled from \"styled-components\";\r\nimport generalStyles from \"../../styles/general\";\r\n\r\n\r\nexport const ModalContainerWrapperElement = styled.div`\r\n    width: 0px;\r\n    height: 0px;\r\n`;\r\n\r\n\r\nexport const ModalContainerElement = styled.div`\r\n    background-color: ${generalStyles.lighterBlueBackgroundColor};\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    z-index: 30;\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const ModalTitleContainerElement = styled.div`\r\n    h2 {\r\n       font-weight: 400;\r\n    }\r\n`;\r\n\r\nexport const ButtonsContainerElement = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`","import { Modal } from './Modal';\r\n\r\nexport default Modal;","import { useCallback, useEffect, useState } from \"react\"\r\nimport { useKeyboardEvent } from \"../../hooks/keyHandler\";\r\nimport TextButton from \"../TextButton\";\r\nimport ZIndexLayer from \"../ZIndexLayer\";\r\nimport { ModalContainerWrapperElement, ModalContainerElement, ModalTitleContainerElement, ButtonsContainerElement } from \"./elements\"\r\n\r\nexport interface IModalProps {\r\n    title?: string;\r\n    onSave?: () => void;\r\n    isOpened?: boolean;\r\n    onClickOutside?: () => void;\r\n    onCancelClick?: () => void;\r\n    onEsc?: () => void;\r\n}\r\n\r\nexport const Modal: React.FC<IModalProps> = ({\r\n    title = '',\r\n    onSave = () => { },\r\n    children,\r\n    isOpened: externalIsOpened,\r\n    onClickOutside,\r\n    onCancelClick,\r\n    onEsc,\r\n}) => {\r\n    const [isOpened, setIsOpened] = useState(!!externalIsOpened);\r\n\r\n    useEffect(() => {\r\n        setIsOpened(!!externalIsOpened);\r\n    }, [externalIsOpened, setIsOpened]);\r\n\r\n    useKeyboardEvent('Escape', () => {\r\n        onEsc && onEsc();\r\n    })\r\n\r\n    const outsideClickHandler = useCallback(() => {\r\n        if (onClickOutside) {\r\n            onClickOutside();\r\n        }\r\n    }, [onClickOutside])\r\n\r\n\r\n    const onCancelClickHandler = useCallback(() => {\r\n        if (onCancelClick) {\r\n            onCancelClick();\r\n        }\r\n    }, [onCancelClick])\r\n\r\n    return <ModalContainerWrapperElement>\r\n        {isOpened &&\r\n            <>\r\n                <ZIndexLayer onClick={outsideClickHandler} />\r\n                <ModalContainerElement>\r\n                    <ModalTitleContainerElement><h2>{title}</h2></ModalTitleContainerElement>\r\n                    {children}\r\n                    <ButtonsContainerElement>\r\n                        <TextButton text=\"Save\" onClick={onSave} />\r\n                        <TextButton text=\"Cancel\" onClick={onCancelClickHandler} />\r\n                    </ButtonsContainerElement>\r\n                </ModalContainerElement>\r\n            </>\r\n        }\r\n    </ModalContainerWrapperElement>\r\n}","import styled from \"styled-components\";\r\nimport generalStyles from \"../../styles/general\";\r\n\r\nexport const InputContainerElement = styled.div`\r\n    width: 100%;\r\n    padding: 10px 0px;\r\n    position: relative;\r\n`\r\n\r\nexport interface ILabelElementProps {\r\n    isWithValue: boolean;\r\n    isError: boolean;\r\n}\r\n\r\nexport const LabelElement = styled.label`\r\n    position: absolute;\r\n    cursor: text;\r\n    top: ${(props: ILabelElementProps) => props.isWithValue ? '0px' : '25px'};\r\n    left: 10px;\r\n    transition: all 0.5s ease-in-out;\r\n    color: ${(props: ILabelElementProps) => props.isError ? generalStyles.errorColor : generalStyles.grayPrimaryColor};\r\n`\r\n\r\nexport interface ISelectElementProps {\r\n    isError: boolean;\r\n}\r\n\r\n\r\nexport const SelectElement = styled.select`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    border: none;\r\n    background-color: transparent;\r\n    border-bottom: 1px solid ${(props: ISelectElementProps) => props.isError ? generalStyles.errorColor : generalStyles.grayPrimaryColor};\r\n    color: ${generalStyles.grayPrimaryColor};\r\n\r\n    &:focus {\r\n        outline: none;\r\n        & + ${LabelElement} {\r\n            color: ${generalStyles.primaryBlueColor};\r\n            top: 0px;      \r\n        }\r\n    }\r\n`\r\n\r\nexport const SelectErrorElement = styled.div`\r\n    margin-top: 5px;\r\n    font-size: 12px;\r\n    margin-left: 10px;\r\n    color: ${generalStyles.errorColor};\r\n`","import { Select } from './Select';\r\n\r\nexport default Select;","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { InputContainerElement, SelectElement, SelectErrorElement, LabelElement } from './elements';\r\n\r\nexport interface ISelectProps {\r\n    label?: string;\r\n    id?: string;\r\n    name?: string;\r\n    type?: string;\r\n    value?: string;\r\n    onChangeValue?: (value: string) => void;\r\n    onChange?: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n    onBlur?: (e: React.FocusEvent<HTMLSelectElement>) => void;\r\n    onBlurValue?: (value: string) => void;\r\n    error?: string;\r\n}\r\n\r\nexport const Select: React.FC<ISelectProps> = ({\r\n    label,\r\n    name,\r\n    id,\r\n    onChange,\r\n    onBlur,\r\n    type,\r\n    value: parentValue,\r\n    onChangeValue,\r\n    onBlurValue,\r\n    error,\r\n    children\r\n}) => {\r\n    const [value, setValue] = useState(parentValue);\r\n    const textInput = useRef(null);\r\n\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeValue && onChangeValue(e.target.value);\r\n        setValue(e.target.value);\r\n    }, [setValue, onChange]);\r\n\r\n    useEffect(() => {\r\n        setValue(parentValue);\r\n    }, [parentValue, setValue])\r\n\r\n    const handleBlur = useCallback((e: React.FocusEvent<HTMLSelectElement>) => {\r\n        onBlur && onBlur(e);\r\n        onBlurValue && onBlurValue(e.target.value);\r\n    }, [onBlur]);\r\n\r\n    const idParam = useMemo(() => id ? { id } : {}, [id]);\r\n    const nameParam = useMemo(() => name ? { name } : {}, [name]);\r\n    const typeParam = useMemo(() => type ? { type } : {}, [type]);\r\n\r\n    const labelClick = useCallback(() => {\r\n        // @ts-ignore\r\n        textInput?.current?.focus();\r\n    }, [textInput]);\r\n\r\n\r\n    return <InputContainerElement>\r\n        <SelectElement\r\n            isError={!!error}\r\n            {...idParam}\r\n            {...nameParam}\r\n            {...typeParam}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            defaultValue={value}\r\n        >\r\n            {children}\r\n        </SelectElement>\r\n        <LabelElement isWithValue={!!value} isError={!!error} onClick={labelClick}>{label}</LabelElement>\r\n        {error && <SelectErrorElement>{error}</SelectErrorElement> || null}\r\n    </InputContainerElement>\r\n}","import styled from 'styled-components';\r\nimport generalStyles from '../../styles/general';\r\n\r\nexport const CardContainerElement = styled.div`\r\n    padding: 5px;\r\n    width: 250px;\r\n    min-height: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 20px;\r\n    border: 1px solid ${generalStyles.primaryBlueColor};\r\n    background-color: ${generalStyles.lighterBlueBackgroundColor};\r\n\r\n    &:hover {\r\n        transform: translateY(-5px);\r\n        transition: 0.4s;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nexport const TitleContainerElement = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    h4 {\r\n        font-weight: 500;\r\n    }\r\n`\r\n\r\nexport const ContentContainerElement = styled.div`\r\n`\r\n\r\nexport const ExtraTextContainerElement = styled.div`\r\n    text-align: end;\r\n    margin-top: 5px;\r\n    width: 90%;\r\n    color: ${generalStyles.grayPrimaryColor};\r\n    font-size: 12px;\r\n`;","import { Card } from './Card';\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport {\r\n    CardContainerElement,\r\n    ContentContainerElement,\r\n    ExtraTextContainerElement,\r\n    TitleContainerElement\r\n} from './elements';\r\n\r\nexport interface ICardProps {\r\n    title?: string;\r\n    extraText?: string;\r\n    leftActionIcon?: React.ReactNode;\r\n    rightActionIcon?: React.ReactNode;\r\n}\r\n\r\nexport const Card: React.FC<ICardProps> = ({ title, children, extraText }) => {\r\n    return <CardContainerElement>\r\n        <TitleContainerElement><h4>{title}</h4></TitleContainerElement>\r\n        {children && <ContentContainerElement>{children}</ContentContainerElement>}\r\n        {extraText && <ExtraTextContainerElement>{extraText}</ExtraTextContainerElement>}\r\n    </CardContainerElement>\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"XMLID_30_\",\n  d: \"M21,53c-1.8,0-3.7-0.8-5-2.1c-1.3-1.3-2-3.1-2-4.9c0-1.8,0.8-3.6,2-5c1.3-1.3,3.1-2,5-2c1.8,0,3.6,0.8,4.9,2 c1.3,1.3,2.1,3.1,2.1,5c0,1.8-0.8,3.6-2.1,4.9C24.6,52.2,22.8,53,21,53z M50.9,50.9c1.3-1.3,2.1-3.1,2.1-4.9c0-1.8-0.8-3.6-2.1-5 c-1.3-1.3-3.1-2-4.9-2c-1.8,0-3.7,0.8-5,2c-1.3,1.3-2,3.1-2,5c0,1.8,0.8,3.6,2,4.9c1.3,1.3,3.1,2.1,5,2.1 C47.8,53,49.6,52.2,50.9,50.9z M75.9,50.9c1.3-1.3,2.1-3.1,2.1-4.9c0-1.8-0.8-3.6-2.1-5c-1.3-1.3-3.1-2-4.9-2c-1.8,0-3.7,0.8-5,2 c-1.3,1.3-2,3.1-2,5c0,1.8,0.8,3.6,2,4.9c1.3,1.3,3.1,2.1,5,2.1C72.8,53,74.6,52.2,75.9,50.9z\"\n});\n\nfunction SvgDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"92px\",\n    height: \"92px\",\n    viewBox: \"0 0 92 92\",\n    enableBackground: \"new 0 0 92 92\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDots);\nexport default __webpack_public_path__ + \"static/media/dots.803c2ab8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,1v6H1v42h38v-6h10V8.586L41.414,1H11z M42,4.414L45.586,8H42V4.414z M37,47H3V9h8h19v7h7v27V47z M32,10.414L35.586,14 H32V10.414z M39,41V14.586L31.414,7H13V3h27v7h7v31H39z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 50 50\",\n    style: {\n      enableBackground: \"new 0 0 50 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.b633d98d.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M511.213,127L385,0.787V42H105C47.103,42,0,89.103,0,147v159.542l27.481-41.222C49.739,231.933,86.984,212,127.111,212 H385v41.213L511.213,127z M127.111,182C90.992,182,56.74,194.915,30,217.722V147c0-41.355,33.645-75,75-75h308.787l55,55l-55,55 H127.111z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M484.519,246.68c-22.258,33.387-59.503,53.32-99.63,53.32H127v-41.213L0.787,385L127,511.213V470h280 c57.897,0,105-47.103,105-105V205.458L484.519,246.68z M482,365c0,41.355-33.645,75-75,75H98.213l-55-55l55-55h286.676 c36.119,0,70.371-12.915,97.111-35.722V365z\"\n})));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgTransfer(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransfer);\nexport default __webpack_public_path__ + \"static/media/transfer.2e98d9e9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport generalStyles from '../../styles/general';\r\nimport { ReactComponent as DotIcon } from '../../assets/icons/dots.svg';\r\nimport { ReactComponent as CopyIcon } from '../../assets/icons/copy.svg';\r\nimport { ReactComponent as TransferIcon } from '../../assets/icons/transfer.svg';\r\n\r\nexport const SceneElement = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 50px;\r\n\r\n  &.opened-menu {\r\n    z-index: 20;\r\n  }\r\n`;\r\n\r\ninterface ICardElementProps {\r\n  isFlipped: boolean;\r\n}\r\n\r\nexport const CardElement = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: all 0.75s ease;\r\n  transform-style: preserve-3d;\r\n\r\n\r\n  ${(props: ICardElementProps) => props.isFlipped ? 'transform: rotateX(180deg)' : ''};\r\n`;\r\n\r\nconst CardFace = `\r\n  backface-visibility: hidden;\r\n\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  border: 1px solid ${generalStyles.primaryBlueColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CardFaceFrontElement = styled.div`\r\n  background: ${generalStyles.lighterBlueBackgroundColor};\r\n  ${CardFace}\r\n`\r\n\r\nexport const CardFaceBackElement = styled.div`\r\n  background: ${generalStyles.primaryBlueColor};\r\n  color: ${generalStyles.lighterBlueBackgroundColor};\r\n  transform: rotateX(180deg);\r\n  ${CardFace}\r\n`\r\n\r\nexport const IconContainerElement = styled.div`\r\n  position: absolute;\r\n  top: 2px;\r\n  right: 10px;\r\n`\r\n\r\nexport const DotIconElement = styled(DotIcon)`\r\n  &.front {\r\n    fill: ${generalStyles.primaryBlueColor};\r\n  }\r\n\r\n  &.back {\r\n    fill: ${generalStyles.lighterBlueBackgroundColor};\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport const CopyIconElement = styled(CopyIcon)`\r\n  fill: ${generalStyles.primaryBlueColor};\r\n`\r\n\r\nexport const TransferIconElement = styled(TransferIcon)`\r\n  fill: ${generalStyles.primaryBlueColor};\r\n`","import { FlipCard } from './FlipCard';\r\nexport default FlipCard;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { UnderMenuItemElement, UnderMenuItemTextElement, UnderMenu } from '..';\r\nimport ZIndexLayer from '../ZIndexLayer';\r\nimport {\r\n    SceneElement, CardElement, CardFaceFrontElement,\r\n    CardFaceBackElement, IconContainerElement, DotIconElement,\r\n    CopyIconElement,\r\n    TransferIconElement,\r\n} from './elements';\r\n\r\n\r\ninterface IFlipCardProps {\r\n    frontText?: string;\r\n    backText?: string;\r\n    frontIcon?: React.ReactNode,\r\n    backIcon?: React.ReactNode,\r\n    handleIconClick?: () => void;\r\n    isMenuOpened?: boolean;\r\n    innerMenu?: React.ReactNode,\r\n}\r\n\r\n//https://3dtransforms.desandro.com/card-flip\r\n\r\nexport const FlipCard: React.FC<IFlipCardProps> = ({ frontText, backText, handleIconClick, isMenuOpened = false, innerMenu }) => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    const onIconClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        e.stopPropagation();\r\n        // setIsMenuOpened(status => !status);\r\n        if (handleIconClick) {\r\n            handleIconClick();\r\n        }\r\n    }, [handleIconClick]);\r\n\r\n    // const closeMenu = useCallback(() => {\r\n    //     setIsMenuOpened(false);\r\n    // }, [setIsMenuOpened])\r\n\r\n    return <>\r\n        {/* {isMenuOpened && <ZIndexLayer onClick={closeMenu} />} */}\r\n        <UnderMenu innerMenu={innerMenu} isMenuOpened={isMenuOpened}>\r\n            <SceneElement onClick={() => setIsFlipped(status => !status)}>\r\n                <CardElement isFlipped={isFlipped}>\r\n                    <CardFaceFrontElement>\r\n                        {frontText}\r\n                        {<IconContainerElement onClick={onIconClick}>\r\n                            <DotIconElement width=\"30px\" height=\"20px\" className=\"front\" />\r\n                        </IconContainerElement>}\r\n                    </CardFaceFrontElement>\r\n                    <CardFaceBackElement>\r\n                        {backText}\r\n                        {<IconContainerElement onClick={onIconClick}>\r\n                            <DotIconElement width=\"30px\" height=\"20px\" className=\"back\" />\r\n                        </IconContainerElement>}\r\n                    </CardFaceBackElement>\r\n                </CardElement>\r\n            </SceneElement>\r\n        </UnderMenu>\r\n    </>\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const LoginWrapperElement = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`\r\n\r\nexport const LoginInputsWrapperElement = styled.div`\r\n    width: 50%;\r\n    max-width: 350px;\r\n`\r\n\r\nexport const TitleElement = styled.h1`\r\n    font-size: 50px;\r\n    font-weight: 300;\r\n`;\r\n\r\nexport const InputFormElement = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`","export interface ILoginSchema {\r\n    email: string | null;\r\n    password: string | null;\r\n}\r\n\r\nexport const loginSchema = {\r\n    email: '',\r\n    password: '',\r\n}\r\n\r\nexport const loginValidate = (values: ILoginSchema): ILoginSchema => {\r\n    const errors: ILoginSchema = {\r\n        email: null,\r\n        password: null,\r\n    };\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Requried';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    }\r\n\r\n    return errors;\r\n}","import React, { useCallback } from 'react';\r\nimport { Input, TextButton } from '../../shared';\r\nimport { InputFormElement, TitleElement } from './elements';\r\nimport { LoginInputsWrapperElement, LoginWrapperElement } from './elements';\r\nimport { Formik } from 'formik';\r\nimport { loginSchema, loginValidate } from './loginSchema';\r\n\r\nexport interface IUserLoginPage {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport interface ILoginPageProps {\r\n    sendLoginData: (user: IUserLoginPage) => void;\r\n}\r\n\r\nexport const LoginPage: React.FC<ILoginPageProps> = ({ sendLoginData }) => {\r\n\r\n    const loginUser = useCallback((values: IUserLoginPage) => {\r\n        sendLoginData(values);\r\n    }, [sendLoginData]);\r\n\r\n    const loginUserWrapper = useCallback((values: IUserLoginPage) => () => loginUser(values), [loginUser])\r\n\r\n\r\n    return <LoginWrapperElement>\r\n        <Formik initialValues={loginSchema} onSubmit={loginUser} validate={loginValidate}>\r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n                <InputFormElement onSubmit={handleSubmit}>\r\n                    <TitleElement>WORDS</TitleElement>\r\n                    <LoginInputsWrapperElement>\r\n                        <Input\r\n                            label=\"Email *\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                            error={touched?.email && errors?.email || ''}\r\n                        />\r\n                        <Input\r\n                            label=\"Password *\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                            error={touched?.password && errors?.password || ''}\r\n                        />\r\n                    </LoginInputsWrapperElement>\r\n                    <TextButton text=\"Sign in\" disabled={!!(errors.email || errors.password || !values.password || !values.email)} onClick={loginUserWrapper(values)} />\r\n                </InputFormElement>}\r\n        </Formik>\r\n    </LoginWrapperElement>\r\n}\r\n\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUserAction } from '../../store/user/sagas';\r\nimport { IUserLoginPage, LoginPage } from './LoginPage';\r\n\r\nconst LoginPageContainer: React.FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const loginUser = useCallback((user: IUserLoginPage) => {\r\n        dispatch(loginUserAction(user))\r\n    }, [dispatch]);\r\n\r\n    return <LoginPage sendLoginData={loginUser}></LoginPage>\r\n}\r\n\r\nexport default LoginPageContainer;","import { IWordsShortServerSet, IWordsServerSet, IFullWordsServerSet, IWordServer } from './types';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { IStore } from './../root-reducer';\r\n\r\n\r\nexport const selecWordsSetSlice = (store: IStore) => store.wordsSet;\r\n\r\nexport const selectCurrentUserSetList =\r\n    createSelector(selecWordsSetSlice, (wordsSetSlice): Array<IWordsServerSet> =>\r\n        wordsSetSlice?.setsOfUser || []);\r\n\r\nexport const selectCurrentUserSetShortList =\r\n    createSelector(selecWordsSetSlice, (wordsSetSlice): Array<IWordsShortServerSet> =>\r\n        wordsSetSlice?.setsOfUser.map((wordsSet => ({\r\n            name: wordsSet.name,\r\n            _id: wordsSet._id\r\n        })))) || [];\r\n\r\nexport const selectSelectedWordsSet = createSelector(selecWordsSetSlice, (wordsSetSlice): IFullWordsServerSet | null => wordsSetSlice.selectedSet);\r\n\r\nexport const selectSelectedWordsSetCreatedAt = createSelector(selectSelectedWordsSet, (wordsSet): string => wordsSet?.createdAt as string || '');\r\nexport const selectSelectedWordsSetUpdatedAt = createSelector(selectSelectedWordsSet, (wordsSet): string => wordsSet?.updatedAt as string || '');\r\nexport const selectSelectedWordsSetLastRepetition = createSelector(selectSelectedWordsSet, (wordsSet): string => wordsSet?.lastRepetition as string || '');\r\nexport const selectSelectedWordsSetName = createSelector(selectSelectedWordsSet, (wordsSet): string => wordsSet?.name || '');\r\nexport const selectSelectedWordsSetDescription = createSelector(selectSelectedWordsSet, (wordsSet): string => wordsSet?.description || '');\r\n\r\nexport const selectSelectedWordsSetWordList = createSelector(selectSelectedWordsSet, (wordsSet): Array<IWordServer> => wordsSet?.words || []);","export interface IWordsSet {\r\n    name: string;\r\n    description?: string;\r\n}\r\n\r\nexport type IWordSetType = 'SYSTEM' | 'CUSTOM';\r\nexport const WordSetTypes = {\r\n    SYSTEM: 'SYSTEM',\r\n    CUSTOM: 'CUSTOM',\r\n}\r\n\r\nexport interface IWordsServerSet {\r\n    _id: string;\r\n    name: string;\r\n    description?: string;\r\n    createdAt: Date | string;\r\n    updatedAt: Date | string;\r\n    lastRepetition: Date | string;\r\n    setType: IWordSetType;\r\n}\r\n\r\nexport interface IWord {\r\n    rus: string;\r\n    eng: string;\r\n    setId?: string;\r\n    setIds?: string;\r\n}\r\n\r\nexport interface IWordServer extends IWord {\r\n    _id: string;\r\n    createdAt: Date | string;\r\n    updatedAt: Date | string;\r\n}\r\n\r\nexport interface IFullWordsServerSet extends IWordsServerSet {\r\n    words: Array<IWordServer>;\r\n}\r\n\r\nexport interface IWordsShortServerSet {\r\n    _id: string;\r\n    name: string;\r\n}\r\n\r\nexport interface IWordSetCreateResponse extends IWordsServerSet { };\r\n\r\nexport interface ILoadSelectedSetReq {\r\n    id: string;\r\n}\r\n\r\nexport interface IActionWordInSetProps {\r\n    setId: string;\r\n    wordId: string;\r\n}","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport generalStyles from '../../shared/styles/general';\r\n\r\nexport const SetDescriptionElement = styled.span`\r\n    color: ${generalStyles.grayPrimaryColor};\r\n`;\r\n\r\nexport const SetsContainerElement = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const SetCardContainerElement = styled.div`\r\n    margin: 5px;\r\n`\r\n\r\nexport const LinkElement = styled(Link)`\r\n    text-decoration: none;\r\n`\r\n\r\n","import React from 'react';\r\nimport { Card } from '../../shared';\r\nimport { IWordsServerSet } from '../../store/wordsSet/types';\r\nimport { LinkElement, SetCardContainerElement, SetDescriptionElement } from './elements';\r\n\r\nexport interface ISetCardProps {\r\n    userSet: IWordsServerSet;\r\n}\r\n\r\nexport const SetCard: React.FC<ISetCardProps> = ({ userSet }) => {\r\n    return <LinkElement key={userSet._id} to={`/sets/${userSet._id}`}>\r\n        <SetCardContainerElement>\r\n            <Card title={userSet.name} extraText={`Created at ${userSet.createdAt}`}>\r\n                <SetDescriptionElement>{userSet.description}</SetDescriptionElement>\r\n            </Card>\r\n        </SetCardContainerElement>\r\n    </LinkElement>\r\n}","import React, { useEffect, useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from '../../shared';\r\nimport { loadAllUserSetsAction } from '../../store/wordsSet/sagas';\r\nimport { IWordsServerSet, WordSetTypes } from '../../store/wordsSet/types';\r\nimport { SetDescriptionElement, SetsContainerElement, SetCardContainerElement, LinkElement } from './elements';\r\nimport { SetCard } from './SetCard';\r\n\r\nexport interface ISetsPageProps {\r\n    userSets: IWordsServerSet[];\r\n}\r\n\r\nconst SetsPage: React.FC<ISetsPageProps> = ({ userSets }) => {\r\n    const customUserSets = useMemo(() => userSets.filter(({ setType }) => setType === WordSetTypes.CUSTOM), [userSets])\r\n    const systemUserSets = useMemo(() => userSets.filter(({ setType }) => setType === WordSetTypes.SYSTEM), [userSets])\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAllUserSetsAction());\r\n    }, []);\r\n\r\n    return <>\r\n        <h2>Default sets</h2>\r\n        <SetsContainerElement>\r\n            {systemUserSets.map(userSet => <SetCard userSet={userSet} key={userSet._id} />)}\r\n        </SetsContainerElement>\r\n        <h2>User sets</h2>\r\n        <SetsContainerElement>\r\n            {customUserSets.map(userSet => <SetCard userSet={userSet} key={userSet._id} />)}\r\n        </SetsContainerElement>\r\n    </>\r\n\r\n}\r\n\r\nexport default SetsPage;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadAllUserSetsAction } from '../../store/wordsSet/sagas';\r\nimport { selectCurrentUserSetList } from '../../store/wordsSet/selectors';\r\nimport SetsPage from './SetsPage';\r\n\r\nconst SetsPageContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const userSets = useSelector(selectCurrentUserSetList);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAllUserSetsAction());\r\n    }, []);\r\n\r\n    return <SetsPage userSets={userSets} />;\r\n}\r\n\r\nexport default SetsPageContainer;","import styled from \"styled-components\";\r\nimport generalStyles from \"../../shared/styles/general\";\r\n\r\nexport const FirstInfoContainerElement = styled.div`\r\n    font-size: 14px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 30%;\r\n    min-width: 190px;\r\n`;\r\n\r\nexport const FieldFirstContainerElement = styled.div`\r\n    & > span:first-child {\r\n        font-weight: 500;\r\n        color: ${generalStyles.grayPrimaryColor};\r\n    }\r\n\r\n    & > span:last-child {\r\n        color: black;\r\n    }\r\n\r\n`;\r\n\r\nexport const DescriptionBlockContainerElement = styled.div`\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    & > span:first-child {\r\n        font-weight: 500;\r\n        color: ${generalStyles.grayPrimaryColor};\r\n    };\r\n    & > p {\r\n        color: black;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const WordsContainerElement = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nexport const WordCardContainerElement = styled.div`\r\n    margin: 5px;\r\n`;\r\n\r\nexport const WordBlockHeaderContainerElement = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LanguagesContainerElement = styled.div`\r\n    margin-left: 10px;\r\n    span {\r\n            color: ${generalStyles.grayPrimaryColor};\r\n            font-size: 13px;\r\n            font-weight: 500;\r\n            cursor: pointer;\r\n\r\n            &.active {\r\n                color: ${generalStyles.primaryBlueColor};\r\n            }\r\n\r\n            &:not(.without-hover):hover {\r\n                opacity: 0.9;\r\n            }\r\n        }\r\n`;\r\n\r\nexport const CopyToSetFormContainerElement = styled.div`\r\n    width: 300px;\r\n`;\r\n\r\nexport const CopyToSetFormElement = styled.form`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    margin-left: 5%;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const NoWordsElement = styled.span`\r\n    color: ${generalStyles.grayPrimaryColor};\r\n    font-weight: 500;\r\n`","export interface ICopyToSetSchema {\r\n    setId: string;\r\n}\r\n\r\nexport const copyToSetValidate = (values: ICopyToSetSchema): ICopyToSetSchema => {\r\n    const errors: ICopyToSetSchema = {\r\n        setId: '',\r\n    };\r\n\r\n    if (!values.setId) {\r\n        errors.setId = 'Required';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport const copyToSetSchema: ICopyToSetSchema = {\r\n    setId: '',\r\n}","import { Formik } from 'formik';\r\nimport React, { useCallback } from 'react';\r\nimport { Input, Modal, Select } from '../../shared';\r\nimport { IWordsShortServerSet } from '../../store/wordsSet/types';\r\nimport { CopyToSetFormContainerElement, CopyToSetFormElement } from './elements';\r\nimport { ICopyToSetSchema, copyToSetSchema, copyToSetValidate } from './schemas';\r\n\r\nexport interface ICopyToSetFormProps {\r\n    isOpened: boolean;\r\n    setsList: IWordsShortServerSet[];\r\n    toggleStatus: () => void;\r\n    onSave: (values: ICopyToSetSchema) => void;\r\n    onEsc: () => void;\r\n}\r\n\r\nexport const CopyToSetForm: React.FC<ICopyToSetFormProps> = ({ isOpened, toggleStatus, onSave, onEsc, setsList }) => {\r\n    const handleSave = useCallback((values) => () => onSave(values), [onSave])\r\n\r\n    return isOpened && <Formik initialValues={copyToSetSchema} onSubmit={onSave} validate={copyToSetValidate} >\r\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n            <Modal\r\n                onEsc={onEsc}\r\n                isOpened={isOpened}\r\n                title=\"Copy to set\"\r\n                onCancelClick={toggleStatus}\r\n                onSave={handleSave(values)}\r\n                onClickOutside={toggleStatus}>\r\n                <CopyToSetFormContainerElement>\r\n                    <CopyToSetFormElement autoComplete=\"off\">\r\n                        <Select\r\n                            label=\"Set *\"\r\n                            id=\"setId\"\r\n                            name=\"setId\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.setId}\r\n                            error={touched?.setId && errors?.setId || ''}\r\n\r\n                        >\r\n                            <option key=\"empty-element\" value=\"\" disabled hidden></option>\r\n                            {setsList?.map(\r\n                                (wordsSet) =>\r\n                                    <option key={wordsSet._id} value={wordsSet._id}>{wordsSet.name}</option>\r\n                            )}\r\n                        </Select>\r\n                    </CopyToSetFormElement>\r\n                </CopyToSetFormContainerElement>\r\n            </Modal>}\r\n    </Formik> || null;\r\n}","import React from 'react';\r\nimport { DescriptionBlockContainerElement, FieldFirstContainerElement, FirstInfoContainerElement } from './elements';\r\n\r\nexport interface SetInfoProps {\r\n    createdAt: string;\r\n    lastRepetition: string;\r\n    updatedAt: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport const SetInfo: React.FC<SetInfoProps> = ({ name, createdAt, updatedAt, lastRepetition, description }) => {\r\n    return <>\r\n        <h2>{name}</h2>\r\n        <FirstInfoContainerElement>\r\n            <FieldFirstContainerElement>\r\n                <span>Created at: </span>\r\n                <span>{createdAt}</span>\r\n            </FieldFirstContainerElement>\r\n            <FieldFirstContainerElement>\r\n                <span>Updated at: </span>\r\n                <span>{updatedAt}</span>\r\n            </FieldFirstContainerElement>\r\n            <FieldFirstContainerElement>\r\n                <span>Last repetition at: </span>\r\n                <span>{lastRepetition}</span>\r\n            </FieldFirstContainerElement>\r\n        </FirstInfoContainerElement>\r\n\r\n        {description && <DescriptionBlockContainerElement>\r\n            <span>Description: </span>\r\n            <p>{description}</p>\r\n        </DescriptionBlockContainerElement>}\r\n    </>\r\n}","import React, { useCallback } from 'react';\r\nimport { LanguagesContainerElement, WordBlockHeaderContainerElement } from './elements';\r\n\r\nexport type tLangauge = 'eng' | 'rus';\r\nconst ENG = 'eng';\r\nconst RUS = 'rus';\r\n\r\nexport interface IWordsBlockHeaderProps {\r\n    language: tLangauge;\r\n    handleChangeLanguage: (lang: tLangauge) => void;\r\n    wordsLength: number;\r\n}\r\n\r\nexport const WordsBlockHeader: React.FC<IWordsBlockHeaderProps> = ({ language, handleChangeLanguage, wordsLength }) => {\r\n    const onChangeLanguage = useCallback((lang: tLangauge) => () => {\r\n        if (handleChangeLanguage) {\r\n            handleChangeLanguage(lang);\r\n        }\r\n    }, [handleChangeLanguage]);\r\n\r\n    return <WordBlockHeaderContainerElement>\r\n        <h3>Words: </h3>\r\n        <LanguagesContainerElement>\r\n            <span className={language === ENG ? 'active' : ''} onClick={onChangeLanguage(ENG)}>ENG </span>\r\n            <span className=\"without-hover\">{' | '}</span>\r\n            <span className={language === RUS ? 'active' : ''} onClick={onChangeLanguage(RUS)}>RUS</span>\r\n            <span className=\"without-hover\">, {wordsLength}</span>\r\n        </LanguagesContainerElement>\r\n    </WordBlockHeaderContainerElement>\r\n\r\n}","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { FlipCard, Modal, UnderMenuItemElement, UnderMenuItemTextElement, ZIndexLayer } from '../../shared';\r\nimport { CopyIconElement, TransferIconElement } from '../../shared/components/FlipCard/elements';\r\nimport { IActionWordInSetProps, IWordServer, IWordsShortServerSet } from '../../store/wordsSet/types';\r\nimport { CopyToSetForm } from './CopyToSetForm';\r\nimport { LanguagesContainerElement, DescriptionBlockContainerElement, FieldFirstContainerElement, FirstInfoContainerElement, WordBlockHeaderContainerElement, WordCardContainerElement, WordsContainerElement, NoWordsElement } from './elements';\r\nimport { ICopyToSetSchema } from './schemas';\r\nimport { SetInfo } from './SetInfo';\r\nimport { WordsBlockHeader } from './WordsBlockHeader';\r\n\r\ninterface ISetPageProps {\r\n    currentSetId: string;\r\n    createdAt: string;\r\n    lastRepetition: string;\r\n    updatedAt: string;\r\n    name: string;\r\n    description: string;\r\n    words: Array<IWordServer>;\r\n    setsList: IWordsShortServerSet[];\r\n    copyToSet: (values: IActionWordInSetProps) => void;\r\n    removeFromSet: (values: IActionWordInSetProps) => void;\r\n}\r\n\r\ntype tLangauge = 'eng' | 'rus';\r\nconst ENG = 'eng';\r\nconst RUS = 'rus';\r\n\r\ninterface IOpenedMenu {\r\n    opened: boolean;\r\n    id: string;\r\n}\r\n\r\n\r\nexport const SetPage: React.FC<ISetPageProps> = ({\r\n    createdAt,\r\n    updatedAt,\r\n    lastRepetition,\r\n    description,\r\n    name,\r\n    words,\r\n    setsList,\r\n    copyToSet,\r\n    removeFromSet,\r\n    currentSetId\r\n}) => {\r\n    const [openedMenuStatus, setOpenedMenuStatus] = useState<IOpenedMenu>({\r\n        opened: false,\r\n        id: '',\r\n    });\r\n    const [isModalOpened, setIsModalOpened] = useState(false);\r\n\r\n    const [language, setLanguage] = useState<tLangauge>(RUS);\r\n    const changeLanguage = useCallback((lang: tLangauge) => {\r\n        setLanguage(lang);\r\n    }, [setLanguage]);\r\n\r\n    const frontKey = useMemo(() => language === ENG ? 'eng' : 'rus', [language]);\r\n    const backKey = useMemo(() => language === ENG ? 'rus' : 'eng', [language]);\r\n\r\n    const onIconClick = useCallback((id) => () => {\r\n        setOpenedMenuStatus(status => ({\r\n            opened: !status.opened,\r\n            id,\r\n        }));\r\n    }, [setOpenedMenuStatus]);\r\n\r\n    const closeMenu = useCallback(() => {\r\n        setOpenedMenuStatus(status => ({\r\n            ...status,\r\n            opened: false,\r\n        }));\r\n    }, [setOpenedMenuStatus])\r\n\r\n    const onClickCopyTo = useCallback(() => {\r\n        closeMenu();\r\n        setIsModalOpened(true);\r\n    }, [setIsModalOpened]);\r\n\r\n    const toggleModalStatus = useCallback(() => {\r\n        setIsModalOpened(status => !status);\r\n    }, [setIsModalOpened])\r\n\r\n\r\n    const closeModal = useCallback(() => {\r\n        setIsModalOpened(false);\r\n    }, [setIsModalOpened])\r\n    \r\n    // menu of set card\r\n    const onClickSaveToCopy = useCallback((values: ICopyToSetSchema) => {\r\n        if (copyToSet && openedMenuStatus.id) {\r\n            copyToSet({\r\n                setId: values.setId,\r\n                wordId: openedMenuStatus.id\r\n            });\r\n            closeModal();\r\n        }\r\n    }, [copyToSet, openedMenuStatus, closeModal]);\r\n\r\n\r\n    const onClickRemoveFromSet = useCallback(() => {\r\n        if (openedMenuStatus.opened && openedMenuStatus.id) {\r\n            removeFromSet({\r\n                setId: currentSetId,\r\n                wordId: openedMenuStatus.id\r\n            });\r\n            closeMenu();\r\n        }\r\n    }, [currentSetId, openedMenuStatus, closeMenu]);\r\n\r\n    return <div>\r\n        <CopyToSetForm\r\n            isOpened={isModalOpened}\r\n            toggleStatus={toggleModalStatus}\r\n            onSave={onClickSaveToCopy}\r\n            setsList={setsList}\r\n            onEsc={closeModal}\r\n        />\r\n        {openedMenuStatus?.opened && <ZIndexLayer onClick={closeMenu} />}\r\n        <SetInfo\r\n            description={description}\r\n            name={name}\r\n            createdAt={createdAt}\r\n            updatedAt={updatedAt}\r\n            lastRepetition={lastRepetition} />\r\n        <WordsBlockHeader\r\n            handleChangeLanguage={changeLanguage}\r\n            language={language}\r\n            wordsLength={words?.length || 0}\r\n        />\r\n        <WordsContainerElement>\r\n            {words?.length && words?.map(word =>\r\n                <WordCardContainerElement key={word._id}>\r\n                    <FlipCard frontText={word[frontKey]} backText={word[backKey]} innerMenu={<>\r\n                        <UnderMenuItemElement onClick={onClickCopyTo}>\r\n                            <UnderMenuItemTextElement>Copy to</UnderMenuItemTextElement>\r\n                            <CopyIconElement width=\"18px\" />\r\n                        </UnderMenuItemElement>\r\n                        <UnderMenuItemElement>\r\n                            <UnderMenuItemTextElement\r\n                                onClick={onClickRemoveFromSet}>\r\n                                Remove from set\r\n                                </UnderMenuItemTextElement>\r\n                            <TransferIconElement width=\"18px\" />\r\n                        </UnderMenuItemElement>\r\n                    </>}\r\n                        isMenuOpened={openedMenuStatus?.opened && openedMenuStatus?.id === word._id}\r\n                        handleIconClick={onIconClick(word._id)} />\r\n                </WordCardContainerElement>\r\n            ) || <NoWordsElement>No words yet :(</NoWordsElement>}\r\n        </WordsContainerElement>\r\n    </div >\r\n};\r\n\r\n","import React from 'react';\r\nimport { LoginPage } from './../LoginPage';\r\nimport { SetsPage } from '../SetsPage';\r\nimport SetPage from './../SetPage';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface IRoute {\r\n    path: string;\r\n    component: React.ComponentClass<any, any> | React.FunctionComponent<any> | undefined;\r\n    id: number;\r\n}\r\n\r\nexport const appNotAuthRoutes: Array<IRoute> = [{\r\n    path: '/login',\r\n    id: 1,\r\n    component: LoginPage,\r\n}\r\n];\r\n\r\nexport const appAuthRoutes: Array<IRoute> = [{\r\n    path: '/sets',\r\n    id: 1,\r\n    component: SetsPage,\r\n},\r\n{\r\n    path: '/sets/:id',\r\n    id: 2,\r\n    component: SetPage\r\n}]","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { copyToSetAction, loadSelectedSetAction, removeFromSetAction } from '../../store/wordsSet/sagas';\r\nimport { selectCurrentUserSetShortList, selectSelectedWordsSetCreatedAt, selectSelectedWordsSetDescription, selectSelectedWordsSetName, selectSelectedWordsSetUpdatedAt, selectSelectedWordsSetWordList } from '../../store/wordsSet/selectors';\r\nimport { IActionWordInSetProps } from '../../store/wordsSet/types';\r\nimport { SetPage } from './SetPage';\r\n\r\ninterface ISetPageContainerParams {\r\n    id: string;\r\n}\r\n\r\nexport const SetPageContainer: React.FC<void> = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<ISetPageContainerParams>();\r\n\r\n    const createdAt = useSelector(selectSelectedWordsSetCreatedAt);\r\n    const updatedAt = useSelector(selectSelectedWordsSetUpdatedAt);\r\n    const lastRepetition = useSelector(selectSelectedWordsSetUpdatedAt);\r\n    const name = useSelector(selectSelectedWordsSetName);\r\n    const description = useSelector(selectSelectedWordsSetDescription);\r\n    const words = useSelector(selectSelectedWordsSetWordList);\r\n\r\n    const setsList = useSelector(selectCurrentUserSetShortList);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSelectedSetAction({ id }));\r\n    }, [id])\r\n\r\n    const copyToSet = useCallback((values: IActionWordInSetProps) => {\r\n        dispatch(copyToSetAction(values))\r\n    }, [dispatch]); \r\n\r\n    const removeFromSet = useCallback((values: IActionWordInSetProps) => {\r\n        dispatch(removeFromSetAction(values))\r\n    }, [dispatch]); \r\n\r\n    return <SetPage\r\n        currentSetId={id}\r\n        createdAt={createdAt}\r\n        updatedAt={updatedAt}\r\n        lastRepetition={lastRepetition}\r\n        name={name}\r\n        description={description}\r\n        words={words}\r\n        setsList={setsList}\r\n        copyToSet={copyToSet}\r\n        removeFromSet={removeFromSet}\r\n    />\r\n};\r\n\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.0002 28.75C22.5942 28.75 28.7502 22.5939 28.7502 15C28.7502 7.40608 22.5942 1.25 15.0002 1.25C7.40633 1.25 1.25024 7.40608 1.25024 15C1.25024 22.5939 7.40633 28.75 15.0002 28.75Z\",\n  stroke: \"#FF3333\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 7.5V22.5\",\n  stroke: \"#FF3333\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.5 15H7.5\",\n  stroke: \"#FF3333\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nfunction SvgAddInCircle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddInCircle);\nexport default __webpack_public_path__ + \"static/media/add-in-circle.ec559094.svg\";\nexport { ForwardRef as ReactComponent };","import { generalStyles } from \"../../shared\";\r\nimport styled from \"styled-components\";\r\nimport { ReactComponent as AddInCircle } from '../../shared/assets/icons/add-in-circle.svg';\r\nimport { TextLinkElement } from \"../../shared/components/TextButton/elements\";\r\nimport { DropDownHeaderTextElement } from \"../../shared/components/DropDownMenu/elements\";\r\n\r\nexport const HeaderElement = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    height: 60px;\r\n    padding: 0 80px;\r\n    border-bottom: 1px solid ${generalStyles.graySecondColor};\r\n\r\n    ${TextLinkElement} {\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        padding: 0px 5px 14px 5px;\r\n\r\n        &:hover {\r\n           border-bottom: 4px solid ${generalStyles.lighterPrimaryBlueColor};\r\n           color: ${generalStyles.lighterPrimaryBlueColor};\r\n        }\r\n    }\r\n\r\n    ${DropDownHeaderTextElement} {\r\n        font-weight: 500;\r\n    }\r\n`;\r\n\r\nexport const AddInCircleElement = styled(AddInCircle)`\r\n    cursor: pointer;\r\n    margin-right: 10px;\r\n\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nexport const RightContainerElement = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.9528 15.5672C21.4375 14.5161 22.5493 13.0199 23.1273 11.2951C23.7053 9.57025 23.7196 7.70626 23.1681 5.97278C22.6166 4.2393 21.5279 2.72624 20.0595 1.65249C18.5911 0.57874 16.8192 0 15.0001 0C13.181 0 11.4091 0.57874 9.9407 1.65249C8.4723 2.72624 7.3836 4.2393 6.83209 5.97278C6.28059 7.70626 6.29489 9.57025 6.87292 11.2951C7.45095 13.0199 8.56274 14.5161 10.0474 15.5672C7.15214 16.4109 4.60822 18.1702 2.79685 20.5813C0.985471 22.9924 0.0041775 25.9256 0 28.9413C0 29.2255 0.112882 29.498 0.313814 29.6989C0.514746 29.8999 0.787268 30.0128 1.07143 30.0128H28.9286C29.2127 30.0128 29.4853 29.8999 29.6862 29.6989C29.8871 29.498 30 29.2255 30 28.9413C29.9958 25.9256 29.0146 22.9925 27.2032 20.5814C25.3919 18.1702 22.848 16.411 19.9528 15.5672ZM8.57143 8.58419C8.57143 7.31273 8.94846 6.06984 9.65484 5.01266C10.3612 3.95549 11.3652 3.13152 12.5399 2.64496C13.7146 2.1584 15.0071 2.03109 16.2542 2.27914C17.5012 2.52718 18.6466 3.13945 19.5457 4.0385C20.4447 4.93755 21.057 6.08301 21.305 7.33003C21.5531 8.57705 21.4258 9.86963 20.9392 11.0443C20.4527 12.219 19.6287 13.223 18.5715 13.9293C17.5143 14.6357 16.2715 15.0128 15 15.0128C13.2956 15.0108 11.6616 14.3329 10.4565 13.1277C9.25129 11.9226 8.57337 10.2886 8.57143 8.58419ZM2.19107 27.8699C2.46184 24.943 3.8151 22.2226 5.98601 20.2409C8.15692 18.2592 10.9892 17.159 13.9286 17.1556H16.0714C19.0108 17.159 21.8431 18.2592 24.014 20.2409C26.1849 22.2226 27.5382 24.943 27.8089 27.8699H2.19107Z\",\n  fill: \"#31708F\"\n});\n\nfunction SvgUser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 31,\n    viewBox: \"0 0 30 31\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUser);\nexport default __webpack_public_path__ + \"static/media/user.754ff405.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from 'react';\r\nimport { DropDownMenuItemElement } from './elements';\r\n\r\nexport interface IDropDownMenuItem {\r\n    onClick?: Function;\r\n}\r\n\r\nexport const DropDownMenuItem: React.FC<IDropDownMenuItem> = ({ children, onClick }) => {\r\n    const optimizedOnClick = useCallback((e) => onClick && onClick(e), [onClick]);\r\n    return <DropDownMenuItemElement onClick={optimizedOnClick}>{children}</DropDownMenuItemElement>\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const AddFormElement = styled.form`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const AddFormConatinerElement = styled.div`\r\n    width: 300px;\r\n`;\r\n\r\nexport const TranslationBlockElement = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n    font-size: 14px;\r\n`;","export interface IAddSetSchema {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport interface IAddWordSchema {\r\n    rus: string;\r\n    eng: string;\r\n    setId: string;\r\n}\r\n\r\nexport const addSetSchema = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\nexport const addWordSchema = {\r\n    rus: '',\r\n    eng: '',\r\n    setId: '',\r\n}\r\n\r\nexport const addSetValidate = (values: IAddSetSchema): IAddSetSchema => {\r\n    const errors: IAddSetSchema = {\r\n        name: '',\r\n        description: '',\r\n    };\r\n\r\n    if (!values.name) {\r\n        errors.name = 'Requried';\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport const addWordValidate = (values: IAddWordSchema): IAddWordSchema => {\r\n    const errors: IAddWordSchema = {\r\n        eng: '',\r\n        rus: '',\r\n        setId: '',\r\n    };\r\n\r\n    if (!values.eng) {\r\n        errors.eng = 'Required';\r\n    }\r\n\r\n    if (!values.rus) {\r\n        errors.rus = 'Required';\r\n    }\r\n\r\n    if (!values.setId) {\r\n        errors.setId = 'Required';\r\n    }\r\n\r\n    return errors;\r\n} ","import React, { useCallback } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Input, Modal } from '../../../shared';\r\nimport { AddFormElement, AddFormConatinerElement } from './elements';\r\nimport { addSetSchema, addSetValidate, IAddSetSchema } from './schemas';\r\n\r\nexport interface IAddSetFormProps {\r\n    isOpened: boolean;\r\n    toggleStatus: () => void;\r\n    onSave: (values: IAddSetSchema) => void;\r\n    onEsc: () => void;\r\n}\r\n\r\nconst AddSetForm: React.FC<IAddSetFormProps> = ({ isOpened, toggleStatus, onSave, onEsc }) => {\r\n    const handleSave = useCallback((values) => () => onSave(values), [onSave])\r\n\r\n    return isOpened && <Formik initialValues={addSetSchema} onSubmit={onSave} validate={addSetValidate} >\r\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n            <Modal\r\n                onEsc={onEsc}\r\n                isOpened={isOpened}\r\n                title=\"Add set\"\r\n                onCancelClick={toggleStatus}\r\n                onSave={handleSave(values)}\r\n                onClickOutside={toggleStatus}>\r\n                <AddFormConatinerElement>\r\n                    <AddFormElement autoComplete=\"off\">\r\n                        <Input\r\n                            label=\"Name *\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.name}\r\n                            error={touched?.name && errors?.name || ''}\r\n                        />\r\n                        <Input\r\n                            label=\"Description\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            type=\"description\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.description}\r\n                            error={touched?.description && errors?.description || ''}\r\n                        />\r\n                    </AddFormElement>\r\n                </AddFormConatinerElement>\r\n            </Modal>}\r\n    </Formik> || null;\r\n\r\n}\r\n\r\nexport default AddSetForm;","import React, { useCallback } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Input, Modal, Select, TextButton } from '../../../shared';\r\nimport { AddFormElement, AddFormConatinerElement, TranslationBlockElement } from './elements';\r\nimport { addWordSchema, addWordValidate, IAddWordSchema } from './schemas';\r\nimport { IWordsShortServerSet } from '../../../store/wordsSet/types';\r\n\r\nexport interface IAddWordFormProps {\r\n    isOpened: boolean;\r\n    setsList: IWordsShortServerSet[];\r\n    toggleStatus: () => void;\r\n    onSave: (values: IAddWordSchema) => void;\r\n    onEsc: () => void;\r\n}\r\n\r\nconst AddWordForm: React.FC<IAddWordFormProps> = ({ isOpened, toggleStatus, onSave, setsList, onEsc }) => {\r\n    const handleSave = useCallback((values) => () => onSave(values), [onSave])\r\n\r\n    return isOpened && <Formik initialValues={addWordSchema} onSubmit={onSave} validate={addWordValidate}>\r\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n            <Modal\r\n                onEsc={onEsc}\r\n                isOpened={isOpened}\r\n                title=\"Add word\"\r\n                onCancelClick={toggleStatus}\r\n                onSave={handleSave(values)}\r\n                onClickOutside={toggleStatus}>\r\n                <AddFormConatinerElement>\r\n                    <AddFormElement autoComplete=\"off\">\r\n                        <Input\r\n                            label=\"English *\"\r\n                            id=\"eng\"\r\n                            name=\"eng\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.eng}\r\n                            error={touched?.eng && errors?.eng || ''}\r\n                        />\r\n                        <Input\r\n                            label=\"Russian *\"\r\n                            id=\"rus\"\r\n                            name=\"rus\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.rus}\r\n                            error={touched?.rus && errors?.rus || ''}\r\n                        />\r\n                        <TranslationBlockElement>\r\n                            <TextButton\r\n                                isExternalLink\r\n                                url={`https://context.reverso.net/translation/english-russian/${values.eng.replace(' ', '+')}`}\r\n                                text=\"Translate with CR\"\r\n                            />\r\n                        </TranslationBlockElement>\r\n                        <Select\r\n                            label=\"Set *\"\r\n                            id=\"setId\"\r\n                            name=\"setId\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.setId}\r\n                            error={touched?.setId && errors?.setId || ''}\r\n\r\n                        >\r\n                            <option key=\"empty-element\" value=\"\" disabled hidden></option>\r\n                            {setsList?.map(\r\n                                (wordsSet) =>\r\n                                    <option key={wordsSet._id} value={wordsSet._id}>{wordsSet.name}</option>\r\n                            )}\r\n                        </Select>\r\n                    </AddFormElement>\r\n                </AddFormConatinerElement>\r\n            </Modal>}\r\n    </Formik> || null;\r\n\r\n}\r\n\r\nexport default AddWordForm;","import React, { useCallback, useState } from 'react';\r\nimport { TextButton, DropDownMenu, Modal } from '../../shared';\r\nimport { AddInCircleElement, HeaderElement, RightContainerElement } from './elements';\r\nimport { ReactComponent as UserIcon } from '../../shared/assets/icons/user.svg';\r\nimport { DropDownMenuItem } from '../../shared/components/DropDownMenu/DropDownMenuItem';\r\nimport { AddSetForm, AddWordForm } from './AddForms';\r\nimport { IAddSetSchema, IAddWordSchema } from './AddForms/schemas';\r\nimport { IWordsShortServerSet } from '../../store/wordsSet/types';\r\nimport { useKeyboardEvent } from '../../shared/hooks/keyHandler';\r\nexport interface IHeaderProps {\r\n    currentUserName: string;\r\n    setsList: IWordsShortServerSet[];\r\n    onLogout: () => void;\r\n    onAddSet: (values: IAddSetSchema) => void;\r\n    onAddWord: (values: IAddWordSchema) => void;\r\n}\r\n\r\nexport const Header: React.FC<IHeaderProps> = ({ currentUserName, onLogout, onAddSet, onAddWord, setsList }) => {\r\n    const [isAddWordOpened, setIsAddWordOpened] = useState(false);\r\n    const [isAddSetOpened, setIsAddSetOpened] = useState(false);\r\n\r\n    const toggleAddWordOpenedStatus = useCallback(() => {\r\n        setIsAddWordOpened(status => !status);\r\n    }, [setIsAddWordOpened]);\r\n\r\n    const toggleAddSetOpenedStatus = useCallback(() => {\r\n        setIsAddSetOpened(status => !status)\r\n    }, [setIsAddSetOpened]);\r\n\r\n    const closeAddWordModal = useCallback(() => {\r\n        setIsAddWordOpened(false);\r\n    }, [setIsAddWordOpened]);\r\n\r\n    const closeAddSetModal = useCallback(() => {\r\n        setIsAddSetOpened(false);\r\n    }, [setIsAddSetOpened]);\r\n\r\n    const openAddWordModal = useCallback(() => {\r\n        if (!isAddSetOpened) {\r\n            setIsAddWordOpened(true);\r\n        }\r\n    }, [setIsAddWordOpened, isAddSetOpened]);\r\n\r\n    const openAddSetModal = useCallback(() => {\r\n        if (!isAddWordOpened) {\r\n            setIsAddSetOpened(true);\r\n        }\r\n    }, [setIsAddSetOpened, isAddWordOpened]);\r\n\r\n    const handleSaveSet = useCallback((values: IAddSetSchema) => {\r\n        onAddSet(values);\r\n        toggleAddSetOpenedStatus();\r\n    }, [onAddSet, toggleAddWordOpenedStatus]);\r\n\r\n    const handleSaveWord = useCallback((values: IAddWordSchema) => {\r\n        onAddWord(values);\r\n        toggleAddWordOpenedStatus();\r\n    }, [onAddSet, toggleAddWordOpenedStatus]);\r\n\r\n    useKeyboardEvent('w', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('W', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('Ц', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('ц', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n\r\n    useKeyboardEvent('s', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('S', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('Ы', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('ы', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n\r\n    return <>\r\n        <HeaderElement>\r\n            <div>\r\n                <TextButton text=\"Sets\" url=\"/sets\" />\r\n            </div>\r\n            <RightContainerElement>\r\n                <DropDownMenu headerText=\"CREATE +\">\r\n                    <DropDownMenuItem onClick={toggleAddSetOpenedStatus}>\r\n                        Set\r\n                </DropDownMenuItem>\r\n                    <DropDownMenuItem onClick={toggleAddWordOpenedStatus}>\r\n                        Word\r\n                </DropDownMenuItem>\r\n                </DropDownMenu>\r\n                <DropDownMenu headerText={currentUserName} icon={<UserIcon width=\"20px\" />}>\r\n                    <DropDownMenuItem onClick={onLogout}>\r\n                        Logout\r\n                </DropDownMenuItem>\r\n                </DropDownMenu>\r\n            </RightContainerElement>\r\n\r\n        </HeaderElement>\r\n        <AddSetForm isOpened={isAddSetOpened} toggleStatus={toggleAddSetOpenedStatus} onSave={handleSaveSet} onEsc={closeAddSetModal} />\r\n        <AddWordForm isOpened={isAddWordOpened} toggleStatus={toggleAddWordOpenedStatus} onSave={handleSaveWord} setsList={setsList} onEsc={closeAddWordModal} />\r\n    </>\r\n}\r\n\r\n","import { HeaderContainer } from './HeaderContainer';\r\nexport default HeaderContainer;","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUserAction } from '../../store/user/sagas';\r\nimport { selectCurrentUserFullName } from '../../store/user/selectors';\r\nimport { createWordAction, createWordsSetAction } from '../../store/wordsSet/sagas';\r\nimport { selectCurrentUserSetShortList } from '../../store/wordsSet/selectors';\r\nimport { IAddSetSchema, IAddWordSchema } from './AddForms/schemas';\r\nimport { Header } from './Header';\r\n\r\ninterface IHeaderContainerProps {\r\n\r\n}\r\n\r\nexport const HeaderContainer: React.FC<IHeaderContainerProps> = () => {\r\n    const dispatch = useDispatch();\r\n    const currentUserName = useSelector(selectCurrentUserFullName);\r\n    const currentUserShortSetsList = useSelector(selectCurrentUserSetShortList);\r\n\r\n    const onLogout = useCallback(() => {\r\n        dispatch(logoutUserAction());\r\n    }, []);\r\n\r\n    const onAddSet = useCallback((values: IAddSetSchema) => {\r\n        dispatch(createWordsSetAction(values))\r\n    }, []);\r\n\r\n    const onAddWord = useCallback((values: IAddWordSchema) => {\r\n        dispatch(createWordAction(values))\r\n    }, []);\r\n\r\n    return <Header\r\n        onLogout={onLogout}\r\n        currentUserName={currentUserName}\r\n        onAddSet={onAddSet}\r\n        onAddWord={onAddWord}\r\n        setsList={currentUserShortSetsList}\r\n    />\r\n}  ","import { ISnackbar } from './types';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { IStore } from './../root-reducer';\r\n\r\n\r\nexport const selectAppSlice = (store: IStore) => store.app;\r\n\r\nexport const selectSnackbar =\r\n    createSelector(selectAppSlice, (app): ISnackbar => app.snackbar);\r\n\r\nexport const selectIsSnackbarOpened = createSelector(selectSnackbar, (snackbar): boolean => !!snackbar?.isOpened);\r\nexport const selectIsSnackbarSuccess = createSelector(selectSnackbar, (snackbar): boolean => !!snackbar?.isSuccess);\r\nexport const selectSnackbarText = createSelector(selectSnackbar, (snackbar): string => snackbar?.text);","import styled, { keyframes } from 'styled-components';\r\nimport generalStyles from '../../shared/styles/general';\r\n\r\ninterface ISnackbarProps {\r\n    isSuccess: boolean;\r\n}\r\n\r\nconst snackBarAppearing = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 0.95;\r\n\r\n  }\r\n`;\r\n\r\nexport const SnackbarElement = styled.div`\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 50%;\r\n    transform: translateX(50%);\r\n    padding: 5px;\r\n    min-width: 200px;\r\n    height: 50px;\r\n    display: flex;\r\n    font-size: 14px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 5;\r\n    border-radius: 10px;\r\n    animation: ${snackBarAppearing} 0.8s;\r\n    cursor: pointer;\r\n\r\n    background-color: ${generalStyles.lighterBlueBackgroundColor};\r\n    border: 1px solid #cccecc;\r\n    opacity: 0.95;\r\n\r\n\r\n    /* color: ${(props: ISnackbarProps) => props.isSuccess ? generalStyles.successColor : generalStyles.errorColor}; */\r\n    /* background-color: ${(props: ISnackbarProps) => props.isSuccess ? generalStyles.successBackground : generalStyles.errorBackground}; */\r\n    /* border: 1px solid ${(props: ISnackbarProps) => props.isSuccess ? generalStyles.successBorder : generalStyles.errorBorder}; */\r\n`;\r\n\r\nexport const StatusContainerElement = styled.div`\r\n  color: gray;\r\n`","import React from 'react';\r\nimport { SnackbarElement } from './elements';\r\n\r\ninterface ISnackbarProps {\r\n    isSuccess?: boolean,\r\n    text: string;\r\n    onClick: () => void;\r\n}\r\n\r\nexport const Snackbar: React.FC<ISnackbarProps> = ({ isSuccess = true, text, onClick }) => {\r\n    return <SnackbarElement isSuccess={isSuccess} onClick={onClick}>{text}</SnackbarElement>\r\n}","import { SnackbarContainer } from './SnackbarContainer';\r\nexport default SnackbarContainer;","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectIsSnackbarOpened, selectIsSnackbarSuccess, selectSnackbarText } from '../../store/app/selectors';\r\nimport { resetSnackbarAction } from '../../store/app/slice';\r\nimport { Snackbar } from './Snackbar';\r\n\r\nexport const SnackbarContainer: React.FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isOpened = useSelector(selectIsSnackbarOpened);\r\n    const isSuccess = useSelector(selectIsSnackbarSuccess);\r\n    const text = useSelector(selectSnackbarText);\r\n\r\n    const clickHandler = useCallback(() => {\r\n        dispatch(resetSnackbarAction());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (isOpened) {\r\n            setTimeout(() => {\r\n                dispatch(resetSnackbarAction());\r\n            }, 3000);\r\n        }\r\n    }, [isOpened]);\r\n\r\n    return isOpened ? <Snackbar text={text} isSuccess={isSuccess} onClick={clickHandler} /> : null;\r\n}","import React, { useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport Header from '../Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadUserAction, logoutUserAction } from '../../store/user/sagas';\r\nimport { selectCurrentUserFullName, selectIsAuth } from '../../store/user/selectors';\r\nimport { LoginPage } from '../LoginPage';\r\nimport { appAuthRoutes, appNotAuthRoutes } from './routes-config';\r\nimport HeaderContainer from '../Header';\r\nimport Snackbar from '../Snackbar';\r\nimport { loadAllUserSetsAction } from '../../store/wordsSet/sagas';\r\n\r\nconst MainWrapper = styled.div`\r\n    height: 100%;\r\n`\r\n\r\nconst MainContentElement = styled.div`\r\n    width: 80%;\r\n    margin-left: 10%;\r\n    margin-top: 20px;\r\n    height: calc(100% - 81px);\r\n`\r\n\r\nconst BacgrkoundLettersElement = styled.div`\r\n    position: fixed;\r\n    bottom: 5px;\r\n    right: 0px;\r\n    font-size: 400px;\r\n    line-height: 350px;\r\n    opacity: 0.40;\r\n    z-index: -1;\r\n    overflow: hidden;\r\n    max-width: 60%;\r\n\r\n    & > span {\r\n        color: #b5b5b5;\r\n    }\r\n`\r\n\r\nexport const Main: React.FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector(selectIsAuth);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserAction());\r\n    }, [dispatch])\r\n\r\n    return <Router>\r\n        <Snackbar />\r\n        <BacgrkoundLettersElement><span>Aa</span></BacgrkoundLettersElement>\r\n        {isAuth !== null && <MainWrapper>\r\n            {isAuth && <HeaderContainer /> || null}\r\n            <MainContentElement>\r\n                <Switch>\r\n                    {(isAuth ? appAuthRoutes : appNotAuthRoutes)\r\n                        .map(item => <Route exact component={item.component} path={item.path} key={item.id}></Route>)}\r\n                    <Redirect to={isAuth ? '/sets' : '/login'} />\r\n                </Switch>\r\n            </MainContentElement>\r\n        </MainWrapper>}\r\n    </Router>\r\n}","// @ts-ignore\r\nconst logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.info('dispatching', action);\r\n    const result = next(action);\r\n    console.log('next state', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\n\r\nexport default logger;","import { wordsSetReducer as wordsSet, IWordsSetState } from './wordsSet/slice';\r\nimport { userReducer as user, IUserState } from './user/slice';\r\nimport { appReducer as app, IAppState } from './app/slice';\r\n\r\nexport interface IStore {\r\n    user: IUserState;\r\n    wordsSet: IWordsSetState;\r\n    app: IAppState;\r\n}\r\n\r\nexport default { user, wordsSet, app };","import { all } from 'redux-saga/effects';\r\nimport userSagas from './user/sagas';\r\nimport wordsSetSagas from './wordsSet/sagas';\r\n\r\nexport default function* sagas() {\r\n    yield all([...userSagas, ...wordsSetSagas]);\r\n}","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { loggerMiddleware } from './middlewares';\r\nimport rootReducer from './root-reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport sagas from './sagas';\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureAppStore(preloadedState?: any) {\r\n    const store = configureStore({\r\n        reducer: rootReducer,\r\n        middleware: [loggerMiddleware, sagaMiddleware, ...getDefaultMiddleware()],\r\n        preloadedState,\r\n    });\r\n\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}","import { Provider } from 'react-redux';\nimport './App.css';\nimport { Main } from './components/Main/Main';\nimport configureAppStore from './store/store';\n\nconst store = configureAppStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}