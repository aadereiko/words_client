[{"D:\\words_app\\app\\client\\redux-toolkit\\src\\index.js":"1","D:\\words_app\\app\\client\\redux-toolkit\\src\\reportWebVitals.js":"2","D:\\words_app\\app\\client\\redux-toolkit\\src\\App.tsx":"3","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\store.ts":"4","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\root-reducer.ts":"5","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\middlewares\\index.ts":"6","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\user\\slice.ts":"7","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\middlewares\\logger.ts":"8","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\sagas.ts":"9","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\user\\sagas.ts":"10","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\TextButton\\index.ts":"11","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\TextButton\\TextButton.tsx":"12","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\TextButton\\elements.tsx":"13","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\styles\\general.ts":"14","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\index.ts":"15","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\Header.tsx":"16","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\index.ts":"17","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\index.ts":"18","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Main\\Main.tsx":"19","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\index.ts":"20","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\DropDownMenu.tsx":"21","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\elements.tsx":"22","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\DropDownMenuItem.tsx":"23","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\hooks\\outsideClick.ts":"24","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\elements.tsx":"25","D:\\words_app\\app\\client\\redux-toolkit\\src\\services\\request.ts":"26","D:\\words_app\\app\\client\\redux-toolkit\\src\\services\\localStorageService.ts":"27","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\user\\selectors.ts":"28","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Input\\index.ts":"29","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Input\\Input.tsx":"30","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Input\\elements.tsx":"31","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\LoginPage.tsx":"32","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\elements.tsx":"33","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\index.ts":"34","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\LoginPageContainer.tsx":"35","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\loginSchema.ts":"36","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Main\\routes-config.ts":"37","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\index.ts":"38","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\SetsPage.tsx":"39","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Modal\\index.ts":"40","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Modal\\Modal.tsx":"41","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Modal\\elements.tsx":"42","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ZIndexLayer\\index.ts":"43","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ZIndexLayer\\ZIndexLayer.tsx":"44","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ZIndexLayer\\elements.tsx":"45","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\index.ts":"46","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\AddSetForm.tsx":"47","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\schemas.ts":"48","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\elements.tsx":"49","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\HeaderContainer.tsx":"50","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\sagas.ts":"51","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\slice.ts":"52","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\AddWordForm.tsx":"53","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Select\\index.ts":"54","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Select\\Select.tsx":"55","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Select\\elements.tsx":"56","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\selectors.ts":"57","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Card\\index.ts":"58","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Card\\Card.tsx":"59","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\SetsPageContainer.tsx":"60","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Card\\elements.tsx":"61","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\elements.tsx":"62","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\service.ts":"63","D:\\words_app\\app\\client\\redux-toolkit\\src\\services\\dates.ts":"64","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\index.tsx":"65","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\SetPageContainer.tsx":"66","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\SetPage.tsx":"67","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\elements.tsx":"68","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\FlipCard\\index.ts":"69","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\FlipCard\\FlipCard.tsx":"70","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\FlipCard\\elements.tsx":"71","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\hooks\\keyHandler.ts":"72","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\index.ts":"73","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\SnackbarContainer.tsx":"74","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\Snackbar.tsx":"75","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\elements.tsx":"76","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\app\\slice.ts":"77","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\app\\selectors.ts":"78","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\types.ts":"79","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\SetCard.tsx":"80","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\UnderMenu\\elements.tsx":"81","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\UnderMenu\\UnderMenu.tsx":"82","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\SetInfo.tsx":"83","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\WordsBlockHeader.tsx":"84","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\CopyToSetForm.tsx":"85","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\schemas.ts":"86","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ImageView\\ImageView.tsx":"87","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ImageView\\elements.tsx":"88","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\styles\\keyframes.ts":"89"},{"size":504,"mtime":1608503671155,"results":"90","hashOfConfig":"91"},{"size":362,"mtime":499162500000,"results":"92","hashOfConfig":"91"},{"size":307,"mtime":1608584729998,"results":"93","hashOfConfig":"91"},{"size":602,"mtime":1608504594950,"results":"94","hashOfConfig":"91"},{"size":355,"mtime":1611002045514,"results":"95","hashOfConfig":"91"},{"size":57,"mtime":1608503598170,"results":"96","hashOfConfig":"91"},{"size":1137,"mtime":1610999097131,"results":"97","hashOfConfig":"91"},{"size":298,"mtime":1608503801317,"results":"98","hashOfConfig":"91"},{"size":218,"mtime":1610794164161,"results":"99","hashOfConfig":"91"},{"size":1638,"mtime":1611052658475,"results":"100","hashOfConfig":"91"},{"size":72,"mtime":1608583239458,"results":"101","hashOfConfig":"91"},{"size":985,"mtime":1610980880769,"results":"102","hashOfConfig":"91"},{"size":817,"mtime":1612649135997,"results":"103","hashOfConfig":"91"},{"size":437,"mtime":1612649058074,"results":"104","hashOfConfig":"91"},{"size":85,"mtime":1610036074662,"results":"105","hashOfConfig":"91"},{"size":4194,"mtime":1613074480468,"results":"106","hashOfConfig":"91"},{"size":93,"mtime":1608583389724,"results":"107","hashOfConfig":"91"},{"size":714,"mtime":1613075000241,"results":"108","hashOfConfig":"91"},{"size":2048,"mtime":1612653444744,"results":"109","hashOfConfig":"91"},{"size":78,"mtime":1608660121853,"results":"110","hashOfConfig":"91"},{"size":1667,"mtime":1612130402933,"results":"111","hashOfConfig":"91"},{"size":1611,"mtime":1613081006926,"results":"112","hashOfConfig":"91"},{"size":447,"mtime":1608820397954,"results":"113","hashOfConfig":"91"},{"size":786,"mtime":1608820700569,"results":"114","hashOfConfig":"115"},{"size":1277,"mtime":1612650762951,"results":"116","hashOfConfig":"91"},{"size":1825,"mtime":1613074300776,"results":"117","hashOfConfig":"91"},{"size":315,"mtime":1609777993791,"results":"118","hashOfConfig":"91"},{"size":433,"mtime":1610999192008,"results":"119","hashOfConfig":"91"},{"size":57,"mtime":1608829814699,"results":"120","hashOfConfig":"91"},{"size":2224,"mtime":1608907643074,"results":"121","hashOfConfig":"91"},{"size":1433,"mtime":1610035038951,"results":"122","hashOfConfig":"91"},{"size":2405,"mtime":1608907251294,"results":"123","hashOfConfig":"91"},{"size":553,"mtime":1608991376077,"results":"124","hashOfConfig":"91"},{"size":60,"mtime":1608832145838,"results":"125","hashOfConfig":"91"},{"size":525,"mtime":1608898947854,"results":"126","hashOfConfig":"91"},{"size":499,"mtime":1610034636800,"results":"127","hashOfConfig":"91"},{"size":657,"mtime":1610919612795,"results":"128","hashOfConfig":"91"},{"size":60,"mtime":1610799694328,"results":"129","hashOfConfig":"91"},{"size":1408,"mtime":1612128377637,"results":"130","hashOfConfig":"91"},{"size":57,"mtime":1609779066333,"results":"131","hashOfConfig":"91"},{"size":1972,"mtime":1610989767771,"results":"132","hashOfConfig":"91"},{"size":736,"mtime":1613077633002,"results":"133","hashOfConfig":"91"},{"size":75,"mtime":1609779817391,"results":"134","hashOfConfig":"91"},{"size":387,"mtime":1613076558714,"results":"135","hashOfConfig":"91"},{"size":347,"mtime":1613079649360,"results":"136","hashOfConfig":"91"},{"size":112,"mtime":1610796133856,"results":"137","hashOfConfig":"91"},{"size":2238,"mtime":1611004954315,"results":"138","hashOfConfig":"91"},{"size":1621,"mtime":1613079196364,"results":"139","hashOfConfig":"91"},{"size":514,"mtime":1613077610896,"results":"140","hashOfConfig":"91"},{"size":1368,"mtime":1610977831034,"results":"141","hashOfConfig":"91"},{"size":3172,"mtime":1612646665587,"results":"142","hashOfConfig":"91"},{"size":975,"mtime":1610920601176,"results":"143","hashOfConfig":"91"},{"size":4069,"mtime":1613079211480,"results":"144","hashOfConfig":"91"},{"size":60,"mtime":1610796725445,"results":"145","hashOfConfig":"91"},{"size":2281,"mtime":1610797934307,"results":"146","hashOfConfig":"91"},{"size":1438,"mtime":1610797219000,"results":"147","hashOfConfig":"91"},{"size":1734,"mtime":1612127736223,"results":"148","hashOfConfig":"91"},{"size":58,"mtime":1610799604190,"results":"149","hashOfConfig":"91"},{"size":736,"mtime":1610917708834,"results":"150","hashOfConfig":"91"},{"size":584,"mtime":1610799862842,"results":"151","hashOfConfig":"91"},{"size":979,"mtime":1610919265176,"results":"152","hashOfConfig":"91"},{"size":494,"mtime":1610920137308,"results":"153","hashOfConfig":"91"},{"size":798,"mtime":1612127878294,"results":"154","hashOfConfig":"91"},{"size":136,"mtime":1610921021989,"results":"155","hashOfConfig":"91"},{"size":90,"mtime":1610919535118,"results":"156","hashOfConfig":"91"},{"size":2027,"mtime":1612646822211,"results":"157","hashOfConfig":"91"},{"size":6913,"mtime":1613080256100,"results":"158","hashOfConfig":"91"},{"size":3088,"mtime":1613080987290,"results":"159","hashOfConfig":"91"},{"size":66,"mtime":1610976570456,"results":"160","hashOfConfig":"91"},{"size":2263,"mtime":1613078545232,"results":"161","hashOfConfig":"91"},{"size":1617,"mtime":1613078501789,"results":"162","hashOfConfig":"91"},{"size":553,"mtime":1611051194441,"results":"163","hashOfConfig":"91"},{"size":91,"mtime":1611000414842,"results":"164","hashOfConfig":"91"},{"size":1009,"mtime":1612652222612,"results":"165","hashOfConfig":"91"},{"size":370,"mtime":1612652240003,"results":"166","hashOfConfig":"91"},{"size":1229,"mtime":1613080977992,"results":"167","hashOfConfig":"91"},{"size":784,"mtime":1611002289280,"results":"168","hashOfConfig":"91"},{"size":643,"mtime":1611002213680,"results":"169","hashOfConfig":"91"},{"size":1110,"mtime":1613074456354,"results":"170","hashOfConfig":"91"},{"size":718,"mtime":1612127444809,"results":"171","hashOfConfig":"91"},{"size":1062,"mtime":1613081046678,"results":"172","hashOfConfig":"91"},{"size":724,"mtime":1612300312570,"results":"173","hashOfConfig":"91"},{"size":1254,"mtime":1612301984155,"results":"174","hashOfConfig":"91"},{"size":1223,"mtime":1612303097738,"results":"175","hashOfConfig":"91"},{"size":2273,"mtime":1612303801632,"results":"176","hashOfConfig":"91"},{"size":381,"mtime":1612303560968,"results":"177","hashOfConfig":"91"},{"size":1800,"mtime":1613078015493,"results":"178","hashOfConfig":"91"},{"size":1087,"mtime":1613081033623,"results":"179","hashOfConfig":"91"},{"size":217,"mtime":1613080921137,"results":"180","hashOfConfig":"91"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"1tf8okd",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"188"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"188"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"188"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"188"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"188"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"188"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"188"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"188"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"240"},"1ytucgb",{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"188"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"188"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"188"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"188"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"188"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"188"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"188"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"188"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"188"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"188"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"188"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"188"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"188"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"188"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"188"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"188"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"188"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"188"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"188"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"188"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"188"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"188"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"D:\\words_app\\app\\client\\redux-toolkit\\src\\index.js",[],["393","394"],"D:\\words_app\\app\\client\\redux-toolkit\\src\\reportWebVitals.js",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\App.tsx",[],["395","396"],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\store.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\root-reducer.ts",["397"],"import { wordsSetReducer as wordsSet, IWordsSetState } from './wordsSet/slice';\r\nimport { userReducer as user, IUserState } from './user/slice';\r\nimport { appReducer as app, IAppState } from './app/slice';\r\n\r\nexport interface IStore {\r\n    user: IUserState;\r\n    wordsSet: IWordsSetState;\r\n    app: IAppState;\r\n}\r\n\r\nexport default { user, wordsSet, app };","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\middlewares\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\user\\slice.ts",["398"],"import { selectIsAuth } from './selectors';\r\nimport { IUser } from './types';\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IUserState extends IUser {\r\n    isAuth: boolean | null;\r\n};\r\n\r\nconst initialState: IUserState = {\r\n    _id: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    createdAt: '',\r\n    updatedAt: '',\r\n    isAuth: null,\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        setUser(state, { payload }: PayloadAction<IUser>) {\r\n            state._id = payload._id;\r\n            state.email = payload.email;\r\n            state.firstName = payload.firstName;\r\n            state.lastName = payload.lastName;\r\n            state.createdAt = payload.createdAt;\r\n            state.updatedAt = payload.updatedAt;\r\n            state.isAuth = true;\r\n        },\r\n        resetUser(state) {\r\n            return state = { ...initialState, isAuth: false };\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    setUser: setUserAction,\r\n    resetUser: resetUserAction,\r\n} = userSlice.actions;\r\n\r\nexport const { reducer: userReducer } = userSlice;","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\middlewares\\logger.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\sagas.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\user\\sagas.ts",["399","400","401","402"],"import { loadAllUserSetsAction } from './../wordsSet/sagas';\r\nimport { ILoginUser, ILoginUserResponse, IUser } from './types';\r\nimport { getToken, setToken, removeToken } from './../../services/localStorageService';\r\nimport { requestAPI, IResponse, handleResponseSnackbar } from './../../services/request';\r\nimport { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit';\r\nimport { call, takeEvery, put, Effect } from 'redux-saga/effects';\r\n\r\nimport { resetUserAction, setUserAction } from \"./slice\";\r\n// check\r\nexport const loadUserAction = createAction<void>('user/load');\r\nexport const loginUserAction = createAction<ILoginUser>('user/login');\r\nexport const logoutUserAction = createAction<void>('user/logout');\r\n\r\nfunction* loadUser() {\r\n    const resp: IResponse<IUser> = yield call(requestAPI, '/users/me');\r\n\r\n    if (resp?.data) {\r\n        yield put(setUserAction(resp.data));\r\n        yield put(loadAllUserSetsAction());\r\n    } else {\r\n        yield put(resetUserAction());\r\n    }\r\n}\r\n\r\nfunction* loginUser({ payload }: ReturnType<typeof loginUserAction>) {\r\n    const resp: IResponse<ILoginUserResponse> = yield call(requestAPI, '/users/auth', {\r\n        method: 'POST',\r\n        body: payload,\r\n    })\r\n\r\n    if (resp?.data) {\r\n        setToken(resp.data.token);\r\n        yield put(setUserAction(resp.data.user));\r\n    }\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n\r\n}\r\n\r\nfunction* logoutUser() {\r\n    removeToken();\r\n\r\n    yield put(resetUserAction());\r\n}\r\n\r\nexport default [\r\n    takeEvery(loadUserAction, loadUser),\r\n    takeEvery(loginUserAction, loginUser),\r\n    takeEvery(logoutUserAction, logoutUser)\r\n];","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\TextButton\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\TextButton\\TextButton.tsx",["403"],"import React, { useCallback, useMemo } from 'react';\r\nimport { ExternalTextLinkElement, TextButtonElement, TextLinkElement } from './elements';\r\n\r\nexport interface ITextButtonProps {\r\n    text?: string;\r\n    url?: string;\r\n    onClick?: Function;\r\n    disabled?: boolean;\r\n    isExternalLink?: boolean;\r\n}\r\n\r\nexport const TextButton: React.FC<ITextButtonProps> = ({ text, url, onClick, disabled, isExternalLink }) => {\r\n    const optimizedOnClick = useCallback((e: React.MouseEvent<HTMLSpanElement, MouseEvent>): void => {\r\n        if (!disabled && onClick) {\r\n            onClick(e);\r\n        }\r\n\r\n    }, [onClick, disabled]);\r\n\r\n    if (url) {\r\n\r\n        if (isExternalLink) {\r\n            return <ExternalTextLinkElement target=\"_blank\" href={url}>{text}</ExternalTextLinkElement>\r\n        }\r\n\r\n        return <TextLinkElement to={url}>{text}</TextLinkElement>\r\n    }\r\n\r\n    return <TextButtonElement disabled={!!disabled} onClick={optimizedOnClick}> {text}</ TextButtonElement >\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\TextButton\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\styles\\general.ts",["404"],"export default {\r\n    primaryBlueColor: '#31708f',\r\n    lighterPrimaryBlueColor: '#8fc1e3',\r\n\r\n    lighterBlueBackgroundColor: '#f8f8f8',\r\n    backgroundWhiteColor: '#f7f9fb',\r\n\r\n    grayPrimaryColor: '#697865',\r\n    graySecondColor: '#E6E7EB',\r\n\r\n    errorColor: '#870D15',\r\n    errorBackground: '#FF5E5E',\r\n    errorBorder: '#69090F',\r\n\r\n    successColor: '#094926',\r\n    successBackground: '#46D37F',\r\n    successBorder: '#096935',\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\Header.tsx",["405","406","407","408"],"import React, { useCallback, useState } from 'react';\r\nimport { TextButton, DropDownMenu, Modal } from '../../shared';\r\nimport { AddInCircleElement, HeaderElement, RightContainerElement } from './elements';\r\nimport { ReactComponent as UserIcon } from '../../shared/assets/icons/user.svg';\r\nimport { DropDownMenuItem } from '../../shared/components/DropDownMenu/DropDownMenuItem';\r\nimport { AddSetForm, AddWordForm } from './AddForms';\r\nimport { IAddSetSchema, IAddWordSchema } from './AddForms/schemas';\r\nimport { IWordsShortServerSet } from '../../store/wordsSet/types';\r\nimport { useKeyboardEvent } from '../../shared/hooks/keyHandler';\r\nexport interface IHeaderProps {\r\n    currentUserName: string;\r\n    setsList: IWordsShortServerSet[];\r\n    onLogout: () => void;\r\n    onAddSet: (values: IAddSetSchema) => void;\r\n    onAddWord: (values: IAddWordSchema) => void;\r\n}\r\n\r\nexport const Header: React.FC<IHeaderProps> = ({ currentUserName, onLogout, onAddSet, onAddWord, setsList }) => {\r\n    const [isAddWordOpened, setIsAddWordOpened] = useState(false);\r\n    const [isAddSetOpened, setIsAddSetOpened] = useState(false);\r\n\r\n    const toggleAddWordOpenedStatus = useCallback(() => {\r\n        setIsAddWordOpened(status => !status);\r\n    }, [setIsAddWordOpened]);\r\n\r\n    const toggleAddSetOpenedStatus = useCallback(() => {\r\n        setIsAddSetOpened(status => !status)\r\n    }, [setIsAddSetOpened]);\r\n\r\n    const closeAddWordModal = useCallback(() => {\r\n        setIsAddWordOpened(false);\r\n    }, [setIsAddWordOpened]);\r\n\r\n    const closeAddSetModal = useCallback(() => {\r\n        setIsAddSetOpened(false);\r\n    }, [setIsAddSetOpened]);\r\n\r\n    const openAddWordModal = useCallback(() => {\r\n        if (!isAddSetOpened) {\r\n            setIsAddWordOpened(true);\r\n        }\r\n    }, [setIsAddWordOpened, isAddSetOpened]);\r\n\r\n    const openAddSetModal = useCallback(() => {\r\n        if (!isAddWordOpened) {\r\n            setIsAddSetOpened(true);\r\n        }\r\n    }, [setIsAddSetOpened, isAddWordOpened]);\r\n\r\n    const handleSaveSet = useCallback((values: IAddSetSchema) => {\r\n        onAddSet(values);\r\n        toggleAddSetOpenedStatus();\r\n    }, [onAddSet, toggleAddWordOpenedStatus]);\r\n\r\n    const handleSaveWord = useCallback((values: IAddWordSchema) => {\r\n        onAddWord(values);\r\n        toggleAddWordOpenedStatus();\r\n    }, [onAddSet, toggleAddWordOpenedStatus]);\r\n\r\n    useKeyboardEvent('w', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('W', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('Ц', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('ц', openAddWordModal, [isAddWordOpened, isAddSetOpened]);\r\n\r\n    useKeyboardEvent('s', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('S', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('Ы', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n    useKeyboardEvent('ы', openAddSetModal, [isAddWordOpened, isAddSetOpened]);\r\n\r\n    return <>\r\n        <HeaderElement>\r\n            <div>\r\n                <TextButton text=\"Sets\" url=\"/sets\" />\r\n            </div>\r\n            <RightContainerElement>\r\n                <DropDownMenu headerText=\"CREATE\">\r\n                    <DropDownMenuItem onClick={toggleAddSetOpenedStatus}>\r\n                        Set\r\n                </DropDownMenuItem>\r\n                    <DropDownMenuItem onClick={toggleAddWordOpenedStatus}>\r\n                        Word\r\n                </DropDownMenuItem>\r\n                </DropDownMenu>\r\n                <DropDownMenu headerText={currentUserName} icon={<UserIcon width=\"20px\" />}>\r\n                    <DropDownMenuItem onClick={onLogout}>\r\n                        Logout\r\n                </DropDownMenuItem>\r\n                </DropDownMenu>\r\n            </RightContainerElement>\r\n\r\n        </HeaderElement>\r\n        <AddSetForm isOpened={isAddSetOpened} toggleStatus={toggleAddSetOpenedStatus} onSave={handleSaveSet} onEsc={closeAddSetModal} />\r\n        <AddWordForm isOpened={isAddWordOpened} toggleStatus={toggleAddWordOpenedStatus} onSave={handleSaveWord} setsList={setsList} onEsc={closeAddWordModal} />\r\n    </>\r\n}\r\n\r\n","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Main\\Main.tsx",["409","410","411","412","413","414","415","416"],"import React, { useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport Header from '../Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadUserAction, logoutUserAction } from '../../store/user/sagas';\r\nimport { selectCurrentUserFullName, selectIsAuth } from '../../store/user/selectors';\r\nimport { LoginPage } from '../LoginPage';\r\nimport { appAuthRoutes, appNotAuthRoutes } from './routes-config';\r\nimport HeaderContainer from '../Header';\r\nimport Snackbar from '../Snackbar';\r\nimport { loadAllUserSetsAction } from '../../store/wordsSet/sagas';\r\n\r\nconst MainWrapper = styled.div`\r\n    height: 100%;\r\n`\r\n\r\nconst MainContentElement = styled.div`\r\n    width: 80%;\r\n    margin-left: 10%;\r\n    margin-top: 20px;\r\n    height: calc(100% - 81px);\r\n`\r\n\r\nconst BacgrkoundLettersElement = styled.div`\r\n    position: fixed;\r\n    bottom: 5px;\r\n    right: 0px;\r\n    font-size: 400px;\r\n    line-height: 350px;\r\n    opacity: 0.40;\r\n    z-index: -1;\r\n    overflow: hidden;\r\n    max-width: 60%;\r\n\r\n    & > span {\r\n        color: #b5b5b5;\r\n    }\r\n`\r\n\r\nexport const Main: React.FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector(selectIsAuth);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserAction());\r\n    }, [dispatch])\r\n\r\n    return <Router>\r\n        <Snackbar />\r\n        <BacgrkoundLettersElement><span>Aa</span></BacgrkoundLettersElement>\r\n        {isAuth !== null && <MainWrapper>\r\n            {isAuth && <HeaderContainer /> || null}\r\n            <MainContentElement>\r\n                <Switch>\r\n                    {(isAuth ? appAuthRoutes : appNotAuthRoutes)\r\n                        .map(item => <Route exact component={item.component} path={item.path} key={item.id}></Route>)}\r\n                    <Redirect to={isAuth ? '/sets' : '/login'} />\r\n                </Switch>\r\n            </MainContentElement>\r\n        </MainWrapper>}\r\n    </Router>\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\DropDownMenu.tsx",["417","418","419"],"import React, { useCallback, useState, useRef } from 'react';\r\nimport { ReactComponent as UserIcon } from '../../assets/icons/user.svg';\r\nimport { useOutsideClickCheck } from '../../hooks/outsideClick';\r\nimport ZIndexLayer from '../ZIndexLayer';\r\nimport { DropDownMenuItem } from './DropDownMenuItem';\r\nimport { DropDownHeaderElement, DropDownHeaderTextElement, DropDownMenuContainerElement, IconContainerElement, DropDownHeaderContainerElement } from './elements';\r\n\r\nexport interface IDropDownMenu {\r\n    icon?: React.ReactNode,\r\n    headerText?: string;\r\n}\r\n\r\nexport const DropDownMenu: React.FC<IDropDownMenu> = ({ icon, headerText, children }) => {\r\n    const [opened, setOpened] = useState(false);\r\n    const dropDownRef = useRef(null);\r\n    const toggleOpened = useCallback(() => { setOpened(isOpened => !isOpened) }, [setOpened]);\r\n    const closeDropdownIfOpened = useCallback(() => { if (opened) { setOpened(false) } }, [setOpened, opened])\r\n\r\n    return <>\r\n        {opened && <ZIndexLayer onClick={closeDropdownIfOpened} />}\r\n        <DropDownHeaderElement ref={dropDownRef} onClick={toggleOpened}>\r\n            <DropDownHeaderContainerElement>\r\n                <IconContainerElement>\r\n                    {icon || null}\r\n                </IconContainerElement>\r\n                <DropDownHeaderTextElement>\r\n                    {headerText || ''}\r\n                </DropDownHeaderTextElement>\r\n            </DropDownHeaderContainerElement>\r\n            {opened &&\r\n                <DropDownMenuContainerElement>\r\n                    {children}\r\n                </DropDownMenuContainerElement>\r\n\r\n            }\r\n        </DropDownHeaderElement>\r\n    </>\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\DropDownMenu\\DropDownMenuItem.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\hooks\\outsideClick.ts",["420","421","422"],"// @ts-nocheck\r\nimport React, { useRef, useEffect } from \"react\";\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport function useOutsideClickCheck(ref, cb) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                if (cb) {\r\n                    cb();\r\n                }\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}",["423","424"],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\services\\request.ts",["425"],"import { Action } from '@reduxjs/toolkit';\r\nimport { setSnackbarAction } from '../store/app/slice';\r\nimport { getToken } from './localStorageService';\r\n\r\n\r\nexport interface IRequestParams {\r\n    body?: any;\r\n    headers?: Headers;\r\n    method?: 'POST' | 'GET' | 'PUT' | 'DELETE' | 'PATCH',\r\n}\r\n\r\n\r\nexport interface IResponse<T> {\r\n    data: T;\r\n    error?: string;\r\n    msg?: string;\r\n}\r\n\r\n// add T to here\r\nexport const requestAPI = (url: string, { body, ...options }: IRequestParams = {}) => {\r\n    const host = 'http://localhost:7999';\r\n    // const host = process.env.REACT_APP_API || 'http://192.168.100.6:8000';\r\n    // const host = 'http://localhost:8000';\r\n    const headers = new Headers(options.headers);\r\n    headers.append('Content-Type', 'application/json');\r\n    const token = getToken();\r\n    headers.append('Authorization', `Bearer ${token}`);\r\n    const fetchOptions: RequestInit = {\r\n        // mode: 'cors',\r\n        headers,\r\n        body: body ? JSON.stringify(body) : null,\r\n        ...options,\r\n    };\r\n\r\n    console.log(url, \"URL TO SEND\");\r\n\r\n    return window\r\n        .fetch(host + url, fetchOptions)\r\n        // return response.ok ? response.json() : Promise.reject(response);\r\n        .then((response) => response.json())\r\n        .then((response) => response)\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nexport const handleResponseSnackbar = (resp: IResponse<any>): Action => {\r\n    if (!resp) {\r\n        return setSnackbarAction({\r\n            isSuccess: false,\r\n            text: 'Something went wrong',\r\n            isOpened: true,\r\n        })\r\n    }\r\n\r\n    const isSuccess = !!resp?.msg;\r\n    return setSnackbarAction({\r\n        isSuccess,\r\n        text: (isSuccess ? resp.msg : resp.error) || '',\r\n        isOpened: true,\r\n    })\r\n}\r\n\r\nexport default {};","D:\\words_app\\app\\client\\redux-toolkit\\src\\services\\localStorageService.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\user\\selectors.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Input\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Input\\Input.tsx",["426","427","428","429"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { InputContainerElement, InputElement, InputErrorElement, LabelElement } from './elements';\r\n\r\nexport interface IInput {\r\n    label?: string;\r\n    id?: string;\r\n    name?: string;\r\n    type?: string;\r\n    value?: string;\r\n    onChangeValue?: (value: string) => void;\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n    onBlurValue?: (value: string) => void;\r\n    error?: string;\r\n}\r\n\r\nexport const Input: React.FC<IInput> = ({\r\n    label,\r\n    name,\r\n    id,\r\n    onChange,\r\n    onBlur,\r\n    type,\r\n    value: parentValue,\r\n    onChangeValue,\r\n    onBlurValue,\r\n    error\r\n}) => {\r\n    const [value, setValue] = useState(parentValue);\r\n    const textInput = useRef(null);\r\n\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeValue && onChangeValue(e.target.value);\r\n        setValue(e.target.value);\r\n    }, [setValue, onChange]);\r\n\r\n    useEffect(() => {\r\n        setValue(parentValue);\r\n    }, [parentValue, setValue])\r\n\r\n    const handleBlur = useCallback((e: React.FocusEvent<HTMLInputElement>) => {\r\n        onBlur && onBlur(e);\r\n        onBlurValue && onBlurValue(e.target.value);\r\n    }, [onBlur]);\r\n\r\n    const idParam = useMemo(() => id ? { id } : {}, [id]);\r\n    const nameParam = useMemo(() => name ? { name } : {}, [name]);\r\n    const typeParam = useMemo(() => type ? { type } : {}, [type]);\r\n\r\n    const labelClick = useCallback(() => {\r\n        // @ts-ignore\r\n        textInput?.current?.focus();\r\n    }, [textInput]);\r\n\r\n\r\n    return <InputContainerElement>\r\n        <InputElement\r\n            isError={!!error}\r\n            {...idParam}\r\n            {...nameParam}\r\n            {...typeParam}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            defaultValue={value}\r\n            ref={textInput}\r\n        />\r\n        <LabelElement isWithValue={!!value} isError={!!error} onClick={labelClick}>{label}</LabelElement>\r\n        {error && <InputErrorElement>{error}</InputErrorElement> || null}\r\n    </InputContainerElement>\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Input\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\LoginPage.tsx",["430","431","432","433"],"import React, { useCallback } from 'react';\r\nimport { Input, TextButton } from '../../shared';\r\nimport { InputFormElement, TitleElement } from './elements';\r\nimport { LoginInputsWrapperElement, LoginWrapperElement } from './elements';\r\nimport { Formik } from 'formik';\r\nimport { loginSchema, loginValidate } from './loginSchema';\r\n\r\nexport interface IUserLoginPage {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport interface ILoginPageProps {\r\n    sendLoginData: (user: IUserLoginPage) => void;\r\n}\r\n\r\nexport const LoginPage: React.FC<ILoginPageProps> = ({ sendLoginData }) => {\r\n\r\n    const loginUser = useCallback((values: IUserLoginPage) => {\r\n        sendLoginData(values);\r\n    }, [sendLoginData]);\r\n\r\n    const loginUserWrapper = useCallback((values: IUserLoginPage) => () => loginUser(values), [loginUser])\r\n\r\n\r\n    return <LoginWrapperElement>\r\n        <Formik initialValues={loginSchema} onSubmit={loginUser} validate={loginValidate}>\r\n            {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n                <InputFormElement onSubmit={handleSubmit}>\r\n                    <TitleElement>WORDS</TitleElement>\r\n                    <LoginInputsWrapperElement>\r\n                        <Input\r\n                            label=\"Email *\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                            error={touched?.email && errors?.email || ''}\r\n                        />\r\n                        <Input\r\n                            label=\"Password *\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                            error={touched?.password && errors?.password || ''}\r\n                        />\r\n                    </LoginInputsWrapperElement>\r\n                    <TextButton text=\"Sign in\" disabled={!!(errors.email || errors.password || !values.password || !values.email)} onClick={loginUserWrapper(values)} />\r\n                </InputFormElement>}\r\n        </Formik>\r\n    </LoginWrapperElement>\r\n}\r\n\r\n","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\LoginPageContainer.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\LoginPage\\loginSchema.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Main\\routes-config.ts",["434"],"import React from 'react';\r\nimport { LoginPage } from './../LoginPage';\r\nimport { SetsPage } from '../SetsPage';\r\nimport SetPage from './../SetPage';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface IRoute {\r\n    path: string;\r\n    component: React.ComponentClass<any, any> | React.FunctionComponent<any> | undefined;\r\n    id: number;\r\n}\r\n\r\nexport const appNotAuthRoutes: Array<IRoute> = [{\r\n    path: '/login',\r\n    id: 1,\r\n    component: LoginPage,\r\n}\r\n];\r\n\r\nexport const appAuthRoutes: Array<IRoute> = [{\r\n    path: '/sets',\r\n    id: 1,\r\n    component: SetsPage,\r\n},\r\n{\r\n    path: '/sets/:id',\r\n    id: 2,\r\n    component: SetPage\r\n}]","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\SetsPage.tsx",["435","436","437","438","439","440"],"import React, { useEffect, useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from '../../shared';\r\nimport { loadAllUserSetsAction } from '../../store/wordsSet/sagas';\r\nimport { IWordsServerSet, WordSetTypes } from '../../store/wordsSet/types';\r\nimport { SetDescriptionElement, SetsContainerElement, SetCardContainerElement, LinkElement } from './elements';\r\nimport { SetCard } from './SetCard';\r\n\r\nexport interface ISetsPageProps {\r\n    userSets: IWordsServerSet[];\r\n}\r\n\r\nconst SetsPage: React.FC<ISetsPageProps> = ({ userSets }) => {\r\n    const customUserSets = useMemo(() => userSets.filter(({ setType }) => setType === WordSetTypes.CUSTOM), [userSets])\r\n    const systemUserSets = useMemo(() => userSets.filter(({ setType }) => setType === WordSetTypes.SYSTEM), [userSets])\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAllUserSetsAction());\r\n    }, []);\r\n\r\n    return <>\r\n        <h2>Default sets</h2>\r\n        <SetsContainerElement>\r\n            {systemUserSets.map(userSet => <SetCard userSet={userSet} key={userSet._id} />)}\r\n        </SetsContainerElement>\r\n        <h2>User sets</h2>\r\n        <SetsContainerElement>\r\n            {customUserSets.map(userSet => <SetCard userSet={userSet} key={userSet._id} />)}\r\n        </SetsContainerElement>\r\n    </>\r\n\r\n}\r\n\r\nexport default SetsPage;","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Modal\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Modal\\Modal.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Modal\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ZIndexLayer\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ZIndexLayer\\ZIndexLayer.tsx",["441","442"],"import { useCallback, useState } from \"react\"\r\nimport { LayerElement } from './elements';\r\n\r\nexport interface IZIndexLayerProps {\r\n    onClick?: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n    zIndex?: number;\r\n}\r\n\r\nexport const ZIndexLayer: React.FC<IZIndexLayerProps> = ({ onClick, zIndex = 10 }) => {\r\n    return <LayerElement onClick={onClick} zIndex={zIndex} />;\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ZIndexLayer\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\AddSetForm.tsx",["443","444","445","446","447","448"],"import React, { useCallback } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Input, Modal } from '../../../shared';\r\nimport { AddFormElement, AddFormConatinerElement } from './elements';\r\nimport { addSetSchema, addSetValidate, IAddSetSchema } from './schemas';\r\n\r\nexport interface IAddSetFormProps {\r\n    isOpened: boolean;\r\n    toggleStatus: () => void;\r\n    onSave: (values: IAddSetSchema) => void;\r\n    onEsc: () => void;\r\n}\r\n\r\nconst AddSetForm: React.FC<IAddSetFormProps> = ({ isOpened, toggleStatus, onSave, onEsc }) => {\r\n    const handleSave = useCallback((values) => () => onSave(values), [onSave])\r\n\r\n    return isOpened && <Formik initialValues={addSetSchema} onSubmit={onSave} validate={addSetValidate} >\r\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n            <Modal\r\n                onEsc={onEsc}\r\n                isOpened={isOpened}\r\n                title=\"Add set\"\r\n                onCancelClick={toggleStatus}\r\n                onSave={handleSave(values)}\r\n                onClickOutside={toggleStatus}>\r\n                <AddFormConatinerElement>\r\n                    <AddFormElement autoComplete=\"off\">\r\n                        <Input\r\n                            label=\"Name *\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.name}\r\n                            error={touched?.name && errors?.name || ''}\r\n                        />\r\n                        <Input\r\n                            label=\"Description\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            type=\"description\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.description}\r\n                            error={touched?.description && errors?.description || ''}\r\n                        />\r\n                    </AddFormElement>\r\n                </AddFormConatinerElement>\r\n            </Modal>}\r\n    </Formik> || null;\r\n\r\n}\r\n\r\nexport default AddSetForm;","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\schemas.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\elements.tsx",["449"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const AddFormElement = styled.form`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 96%;\r\n    margin-left: 2%;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const AddFormConatinerElement = styled.div`\r\n    width: 300px;\r\n`;\r\n\r\nexport const TranslationBlockElement = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n    font-size: 14px;\r\n`;","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\HeaderContainer.tsx",["450","451","452"],"import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUserAction } from '../../store/user/sagas';\r\nimport { selectCurrentUserFullName } from '../../store/user/selectors';\r\nimport { createWordAction, createWordsSetAction } from '../../store/wordsSet/sagas';\r\nimport { selectCurrentUserSetShortList } from '../../store/wordsSet/selectors';\r\nimport { IAddSetSchema, IAddWordSchema } from './AddForms/schemas';\r\nimport { Header } from './Header';\r\n\r\ninterface IHeaderContainerProps {\r\n\r\n}\r\n\r\nexport const HeaderContainer: React.FC<IHeaderContainerProps> = () => {\r\n    const dispatch = useDispatch();\r\n    const currentUserName = useSelector(selectCurrentUserFullName);\r\n    const currentUserShortSetsList = useSelector(selectCurrentUserSetShortList);\r\n\r\n    const onLogout = useCallback(() => {\r\n        dispatch(logoutUserAction());\r\n    }, []);\r\n\r\n    const onAddSet = useCallback((values: IAddSetSchema) => {\r\n        dispatch(createWordsSetAction(values))\r\n    }, []);\r\n\r\n    const onAddWord = useCallback((values: IAddWordSchema) => {\r\n        dispatch(createWordAction(values))\r\n    }, []);\r\n\r\n    return <Header\r\n        onLogout={onLogout}\r\n        currentUserName={currentUserName}\r\n        onAddSet={onAddSet}\r\n        onAddWord={onAddWord}\r\n        setsList={currentUserShortSetsList}\r\n    />\r\n}  ","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\sagas.ts",["453"],"import { IWordSetCreateResponse, IWordsSet, IWordsServerSet, ILoadSelectedSetReq, IFullWordsServerSet, IWord, IWordServer, IActionWordInSetProps } from './types';\r\nimport { requestAPI, IResponse, handleResponseSnackbar } from './../../services/request';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { call, takeEvery, put } from 'redux-saga/effects';\r\nimport { setSelectedWordSetAction, setWordsSetOfCurrentUSerAction } from './slice';\r\nimport { transformFullWordsSetFromService, transformWordsSetFromService } from './service';\r\n\r\n// check\r\nexport const createWordsSetAction = createAction<IWordsSet>('wordsSet/create');\r\nexport const createWordAction = createAction<IWord>('wordsSet/createWord');\r\nexport const loadAllUserSetsAction = createAction<void>('wordsSet/load/me');\r\nexport const loadSelectedSetAction = createAction<ILoadSelectedSetReq>('wordsSet/selected');\r\nexport const copyToSetAction = createAction<IActionWordInSetProps>('wordsSet/copyToSet');\r\nexport const removeFromSetAction = createAction<IActionWordInSetProps>('wordsSet/removeFromSet');\r\n\r\nfunction* createWordsSet({ payload }: ReturnType<typeof createWordsSetAction>) {\r\n    const resp: IResponse<IWordSetCreateResponse> = yield call(requestAPI, '/sets', {\r\n        method: 'POST',\r\n        body: payload,\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\nfunction* loadAllUserSets() {\r\n    const resp: IResponse<IWordsServerSet[]> = yield call(requestAPI, '/sets/me');\r\n    if (resp?.data) {\r\n        yield put(setWordsSetOfCurrentUSerAction(resp.data.map(wordsSet => transformWordsSetFromService(wordsSet))));\r\n    }\r\n\r\n}\r\n\r\nfunction* loadSelectedSet({ payload }: ReturnType<typeof loadSelectedSetAction>) {\r\n    const resp: IResponse<IFullWordsServerSet> = yield call(requestAPI, `/words/${payload.id}`);\r\n    if (resp?.data) {\r\n        yield put(setSelectedWordSetAction(transformFullWordsSetFromService(resp.data)));\r\n    }\r\n}\r\n\r\nfunction* createWord({ payload }: ReturnType<typeof createWordAction>) {\r\n    const resp: IResponse<IWordServer> = yield call(requestAPI, '/words', {\r\n        method: 'POST',\r\n        body: payload,\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\nfunction* copyToSet({ payload }: ReturnType<typeof copyToSetAction>) {\r\n    const resp: IResponse<void> = yield call(requestAPI, `/words/${payload.wordId}/addToSet`, {\r\n        method: \"PATCH\",\r\n        body: {\r\n            setId: payload.setId,\r\n        }\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\nfunction* removeFromSet({ payload }: ReturnType<typeof copyToSetAction>) {\r\n    const resp: IResponse<void> = yield call(requestAPI, `/words/${payload.wordId}/removeSet`, {\r\n        method: \"PATCH\",\r\n        body: {\r\n            setId: payload.setId,\r\n        }\r\n    });\r\n\r\n    yield put(handleResponseSnackbar(resp));\r\n}\r\n\r\n\r\nexport default [\r\n    takeEvery(createWordsSetAction, createWordsSet),\r\n    takeEvery(loadAllUserSetsAction, loadAllUserSets),\r\n    takeEvery(loadSelectedSetAction, loadSelectedSet),\r\n    takeEvery(createWordAction, createWord),\r\n    takeEvery(copyToSetAction, copyToSet),\r\n    takeEvery(removeFromSetAction, removeFromSet)\r\n];","D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\slice.ts",["454"],"import { IWordsSet, IWordsServerSet, IFullWordsServerSet } from './types';\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IWordsSetState {\r\n    setsOfUser: Array<IWordsServerSet>;\r\n    selectedSet: IFullWordsServerSet | null;\r\n};\r\n\r\nconst initialState: IWordsSetState = {\r\n    setsOfUser: [],\r\n    selectedSet: null,\r\n}\r\n\r\nconst wordsSetSlice = createSlice({\r\n    name: 'wordsSet',\r\n    initialState,\r\n    reducers: {\r\n        setWordsSetOfCurrentUSer(state, { payload }: PayloadAction<Array<IWordsServerSet>>) {\r\n            state.setsOfUser = payload;\r\n        },\r\n        setSelectedWordSet(state, { payload }: PayloadAction<IFullWordsServerSet>) {\r\n            state.selectedSet = payload;\r\n        }\r\n    },\r\n})\r\n\r\nexport const {\r\n    setWordsSetOfCurrentUSer: setWordsSetOfCurrentUSerAction,\r\n    setSelectedWordSet: setSelectedWordSetAction,\r\n} = wordsSetSlice.actions;\r\n\r\nexport const { reducer: wordsSetReducer } = wordsSetSlice;","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Header\\AddForms\\AddWordForm.tsx",["455","456","457","458","459","460","461","462","463","464"],"import React, { useCallback } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { ImageView, Input, Modal, Select, TextButton } from '../../../shared';\r\nimport { AddFormElement, AddFormConatinerElement, TranslationBlockElement } from './elements';\r\nimport { addWordSchema, addWordValidate, IAddWordSchema } from './schemas';\r\nimport { IWordsShortServerSet } from '../../../store/wordsSet/types';\r\n\r\nexport interface IAddWordFormProps {\r\n    isOpened: boolean;\r\n    setsList: IWordsShortServerSet[];\r\n    toggleStatus: () => void;\r\n    onSave: (values: IAddWordSchema) => void;\r\n    onEsc: () => void;\r\n}\r\n\r\nconst AddWordForm: React.FC<IAddWordFormProps> = ({ isOpened, toggleStatus, onSave, setsList, onEsc }) => {\r\n    const handleSave = useCallback((values) => () => onSave(values), [onSave])\r\n\r\n    return isOpened && <Formik initialValues={addWordSchema} onSubmit={onSave} validate={addWordValidate}>\r\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n            <Modal\r\n                onEsc={onEsc}\r\n                isOpened={isOpened}\r\n                title=\"Add word\"\r\n                onCancelClick={toggleStatus}\r\n                onSave={handleSave(values)}\r\n                onClickOutside={toggleStatus}>\r\n                <AddFormConatinerElement>\r\n                    <AddFormElement autoComplete=\"off\">\r\n                        <Input\r\n                            label=\"English *\"\r\n                            id=\"eng\"\r\n                            name=\"eng\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.eng}\r\n                            error={touched?.eng && errors?.eng || ''}\r\n                        />\r\n                        <Input\r\n                            label=\"Russian *\"\r\n                            id=\"rus\"\r\n                            name=\"rus\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.rus}\r\n                            error={touched?.rus && errors?.rus || ''}\r\n                        />\r\n                        <TranslationBlockElement>\r\n                            <TextButton\r\n                                isExternalLink\r\n                                url={`https://context.reverso.net/translation/english-russian/${values.eng.replace(' ', '+')}`}\r\n                                text=\"Translate with CR\"\r\n                            />\r\n                        </TranslationBlockElement>\r\n                        <Select\r\n                            label=\"Set *\"\r\n                            id=\"setId\"\r\n                            name=\"setId\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.setId}\r\n                            error={touched?.setId && errors?.setId || ''}\r\n\r\n                        >\r\n                            <option key=\"empty-element\" value=\"\" disabled hidden></option>\r\n                            {setsList?.map(\r\n                                (wordsSet) =>\r\n                                    <option key={wordsSet._id} value={wordsSet._id}>{wordsSet.name}</option>\r\n                            )}\r\n                        </Select>\r\n                        <Input\r\n                            label=\"Image URL\"\r\n                            id=\"imgUrl\"\r\n                            name=\"imgUrl\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.imgUrl}\r\n                            error={touched?.imgUrl && errors?.imgUrl || ''}\r\n                        />\r\n                        {values.imgUrl && !errors.imgUrl && <ImageView src={values.imgUrl} alt=\"Word image\" openable={false} />}\r\n                    </AddFormElement>\r\n                </AddFormConatinerElement>\r\n            </Modal>}\r\n    </Formik> || null;\r\n\r\n}\r\n\r\nexport default AddWordForm;","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Select\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Select\\Select.tsx",["465","466","467","468"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { InputContainerElement, SelectElement, SelectErrorElement, LabelElement } from './elements';\r\n\r\nexport interface ISelectProps {\r\n    label?: string;\r\n    id?: string;\r\n    name?: string;\r\n    type?: string;\r\n    value?: string;\r\n    onChangeValue?: (value: string) => void;\r\n    onChange?: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n    onBlur?: (e: React.FocusEvent<HTMLSelectElement>) => void;\r\n    onBlurValue?: (value: string) => void;\r\n    error?: string;\r\n}\r\n\r\nexport const Select: React.FC<ISelectProps> = ({\r\n    label,\r\n    name,\r\n    id,\r\n    onChange,\r\n    onBlur,\r\n    type,\r\n    value: parentValue,\r\n    onChangeValue,\r\n    onBlurValue,\r\n    error,\r\n    children\r\n}) => {\r\n    const [value, setValue] = useState(parentValue);\r\n    const textInput = useRef(null);\r\n\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeValue && onChangeValue(e.target.value);\r\n        setValue(e.target.value);\r\n    }, [setValue, onChange]);\r\n\r\n    useEffect(() => {\r\n        setValue(parentValue);\r\n    }, [parentValue, setValue])\r\n\r\n    const handleBlur = useCallback((e: React.FocusEvent<HTMLSelectElement>) => {\r\n        onBlur && onBlur(e);\r\n        onBlurValue && onBlurValue(e.target.value);\r\n    }, [onBlur]);\r\n\r\n    const idParam = useMemo(() => id ? { id } : {}, [id]);\r\n    const nameParam = useMemo(() => name ? { name } : {}, [name]);\r\n    const typeParam = useMemo(() => type ? { type } : {}, [type]);\r\n\r\n    const labelClick = useCallback(() => {\r\n        // @ts-ignore\r\n        textInput?.current?.focus();\r\n    }, [textInput]);\r\n\r\n\r\n    return <InputContainerElement>\r\n        <SelectElement\r\n            isError={!!error}\r\n            {...idParam}\r\n            {...nameParam}\r\n            {...typeParam}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            defaultValue={value}\r\n        >\r\n            {children}\r\n        </SelectElement>\r\n        <LabelElement isWithValue={!!value} isError={!!error} onClick={labelClick}>{label}</LabelElement>\r\n        {error && <SelectErrorElement>{error}</SelectErrorElement> || null}\r\n    </InputContainerElement>\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Select\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\selectors.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Card\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Card\\Card.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\SetsPageContainer.tsx",["469"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadAllUserSetsAction } from '../../store/wordsSet/sagas';\r\nimport { selectCurrentUserSetList } from '../../store/wordsSet/selectors';\r\nimport SetsPage from './SetsPage';\r\n\r\nconst SetsPageContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const userSets = useSelector(selectCurrentUserSetList);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadAllUserSetsAction());\r\n    }, []);\r\n\r\n    return <SetsPage userSets={userSets} />;\r\n}\r\n\r\nexport default SetsPageContainer;","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\Card\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\service.ts",["470"],"import { transformDate } from './../../services/dates';\r\nimport { wordsSetReducer } from './slice';\r\nimport { IWordsServerSet, IFullWordsServerSet } from './types';\r\n\r\nexport const transformWordsSetFromService = (wordsSet: IWordsServerSet): IWordsServerSet => ({\r\n    ...wordsSet,\r\n    createdAt: transformDate(wordsSet.createdAt),\r\n    updatedAt: transformDate(wordsSet.updatedAt),\r\n    lastRepetition: wordsSet.lastRepetition && transformDate(wordsSet.lastRepetition),\r\n})\r\n\r\n\r\nexport const transformFullWordsSetFromService = (wordsSet: IFullWordsServerSet): IFullWordsServerSet => ({\r\n    ...wordsSet,\r\n    createdAt: transformDate(wordsSet.createdAt),\r\n    updatedAt: transformDate(wordsSet.updatedAt),\r\n    lastRepetition: wordsSet.lastRepetition && transformDate(wordsSet.lastRepetition),\r\n})","D:\\words_app\\app\\client\\redux-toolkit\\src\\services\\dates.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\index.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\SetPageContainer.tsx",["471"],"import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { copyToSetAction, loadSelectedSetAction, removeFromSetAction } from '../../store/wordsSet/sagas';\r\nimport { selectCurrentUserSetShortList, selectSelectedWordsSetCreatedAt, selectSelectedWordsSetDescription, selectSelectedWordsSetName, selectSelectedWordsSetUpdatedAt, selectSelectedWordsSetWordList } from '../../store/wordsSet/selectors';\r\nimport { IActionWordInSetProps } from '../../store/wordsSet/types';\r\nimport { SetPage } from './SetPage';\r\n\r\ninterface ISetPageContainerParams {\r\n    id: string;\r\n}\r\n\r\nexport const SetPageContainer: React.FC<void> = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<ISetPageContainerParams>();\r\n\r\n    const createdAt = useSelector(selectSelectedWordsSetCreatedAt);\r\n    const updatedAt = useSelector(selectSelectedWordsSetUpdatedAt);\r\n    const lastRepetition = useSelector(selectSelectedWordsSetUpdatedAt);\r\n    const name = useSelector(selectSelectedWordsSetName);\r\n    const description = useSelector(selectSelectedWordsSetDescription);\r\n    const words = useSelector(selectSelectedWordsSetWordList);\r\n\r\n    const setsList = useSelector(selectCurrentUserSetShortList);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSelectedSetAction({ id }));\r\n    }, [id])\r\n\r\n    const copyToSet = useCallback((values: IActionWordInSetProps) => {\r\n        dispatch(copyToSetAction(values))\r\n    }, [dispatch]); \r\n\r\n    const removeFromSet = useCallback((values: IActionWordInSetProps) => {\r\n        dispatch(removeFromSetAction(values))\r\n    }, [dispatch]); \r\n\r\n    return <SetPage\r\n        currentSetId={id}\r\n        createdAt={createdAt}\r\n        updatedAt={updatedAt}\r\n        lastRepetition={lastRepetition}\r\n        name={name}\r\n        description={description}\r\n        words={words}\r\n        setsList={setsList}\r\n        copyToSet={copyToSet}\r\n        removeFromSet={removeFromSet}\r\n    />\r\n};\r\n\r\n","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\SetPage.tsx",["472","473","474","475","476"],"import React, { useCallback, useMemo, useState } from 'react';\r\nimport { FlipCard, Modal, UnderMenuItemElement, UnderMenuItemTextElement, ZIndexLayer } from '../../shared';\r\nimport { IActionWordInSetProps, IWordServer, IWordsShortServerSet } from '../../store/wordsSet/types';\r\nimport { CopyToSetForm } from './CopyToSetForm';\r\nimport { CopyIconElement, TransferIconElement, WordsContainerElement, NoWordsElement, WordCardContainerElement, ImageIconElement, FullImageContainerElement, FullImageElement, FullImageAdditionalInfoElement } from './elements';\r\nimport { ICopyToSetSchema } from './schemas';\r\nimport { SetInfo } from './SetInfo';\r\nimport { WordsBlockHeader } from './WordsBlockHeader';\r\n\r\ninterface ISetPageProps {\r\n    currentSetId: string;\r\n    createdAt: string;\r\n    lastRepetition: string;\r\n    updatedAt: string;\r\n    name: string;\r\n    description: string;\r\n    words: Array<IWordServer>;\r\n    setsList: IWordsShortServerSet[];\r\n    copyToSet: (values: IActionWordInSetProps) => void;\r\n    removeFromSet: (values: IActionWordInSetProps) => void;\r\n}\r\n\r\ntype tLangauge = 'eng' | 'rus';\r\nconst ENG = 'eng';\r\nconst RUS = 'rus';\r\n\r\ninterface IOpenedMenu {\r\n    opened: boolean;\r\n    id: string;\r\n}\r\n\r\ninterface IOpenedImage {\r\n    url: string;\r\n    eng: string;\r\n    rus: string;\r\n}\r\n\r\nconst initOpenedImage: IOpenedImage = {\r\n    rus: '',\r\n    eng: '',\r\n    url: '',\r\n}\r\n\r\nexport const SetPage: React.FC<ISetPageProps> = ({\r\n    createdAt,\r\n    updatedAt,\r\n    lastRepetition,\r\n    description,\r\n    name,\r\n    words,\r\n    setsList,\r\n    copyToSet,\r\n    removeFromSet,\r\n    currentSetId\r\n}) => {\r\n    const [openedMenuStatus, setOpenedMenuStatus] = useState<IOpenedMenu>({\r\n        opened: false,\r\n        id: '',\r\n    });\r\n    const [isModalOpened, setIsModalOpened] = useState(false);\r\n    const [shownImageUrl, setShownImageUrl] = useState<IOpenedImage>(initOpenedImage);\r\n\r\n    const [language, setLanguage] = useState<tLangauge>(RUS);\r\n    const changeLanguage = useCallback((lang: tLangauge) => {\r\n        setLanguage(lang);\r\n    }, [setLanguage]);\r\n\r\n    const frontKey = useMemo(() => language === ENG ? 'eng' : 'rus', [language]);\r\n    const backKey = useMemo(() => language === ENG ? 'rus' : 'eng', [language]);\r\n\r\n    const onIconClick = useCallback((id) => () => {\r\n        setOpenedMenuStatus(status => ({\r\n            opened: !status.opened,\r\n            id,\r\n        }));\r\n    }, [setOpenedMenuStatus]);\r\n\r\n    const closeMenu = useCallback(() => {\r\n        setOpenedMenuStatus(status => ({\r\n            ...status,\r\n            opened: false,\r\n        }));\r\n    }, [setOpenedMenuStatus])\r\n\r\n    const onClickCopyTo = useCallback(() => {\r\n        closeMenu();\r\n        setIsModalOpened(true);\r\n    }, [setIsModalOpened]);\r\n\r\n    const toggleModalStatus = useCallback(() => {\r\n        setIsModalOpened(status => !status);\r\n    }, [setIsModalOpened])\r\n\r\n\r\n    const closeModal = useCallback(() => {\r\n        setIsModalOpened(false);\r\n    }, [setIsModalOpened])\r\n\r\n    // menu of set card\r\n    const onClickSaveToCopy = useCallback((values: ICopyToSetSchema) => {\r\n        if (copyToSet && openedMenuStatus.id) {\r\n            copyToSet({\r\n                setId: values.setId,\r\n                wordId: openedMenuStatus.id\r\n            });\r\n            closeModal();\r\n        }\r\n    }, [copyToSet, openedMenuStatus, closeModal]);\r\n\r\n\r\n    const onClickRemoveFromSet = useCallback(() => {\r\n        if (openedMenuStatus.opened && openedMenuStatus.id) {\r\n            removeFromSet({\r\n                setId: currentSetId,\r\n                wordId: openedMenuStatus.id\r\n            });\r\n            closeMenu();\r\n        }\r\n    }, [currentSetId, openedMenuStatus, closeMenu]);\r\n\r\n    const onShowImageClick = useCallback((imgInfo: IOpenedImage) => () => {\r\n        setShownImageUrl(imgInfo);\r\n        closeMenu();\r\n    }, [setShownImageUrl, closeMenu]);\r\n\r\n    const closeImageView = useCallback(() => {\r\n        setShownImageUrl(initOpenedImage);\r\n    }, [setShownImageUrl]);\r\n\r\n    return <div>\r\n        <CopyToSetForm\r\n            isOpened={isModalOpened}\r\n            toggleStatus={toggleModalStatus}\r\n            onSave={onClickSaveToCopy}\r\n            setsList={setsList}\r\n            onEsc={closeModal}\r\n        />\r\n        {openedMenuStatus?.opened && <ZIndexLayer onClick={closeMenu} />}\r\n        <SetInfo\r\n            description={description}\r\n            name={name}\r\n            createdAt={createdAt}\r\n            updatedAt={updatedAt}\r\n            lastRepetition={lastRepetition} />\r\n        <WordsBlockHeader\r\n            handleChangeLanguage={changeLanguage}\r\n            language={language}\r\n            wordsLength={words?.length || 0}\r\n        />\r\n        <WordsContainerElement>\r\n            {words?.length && words?.map(word =>\r\n                <WordCardContainerElement key={word._id}>\r\n                    <FlipCard frontText={word[frontKey]} backText={word[backKey]} innerMenu={<>\r\n                        <UnderMenuItemElement onClick={onClickCopyTo}>\r\n                            <UnderMenuItemTextElement>Copy to</UnderMenuItemTextElement>\r\n                            <CopyIconElement width=\"18px\" />\r\n                        </UnderMenuItemElement>\r\n                        <UnderMenuItemElement onClick={onClickRemoveFromSet}>\r\n                            <UnderMenuItemTextElement>\r\n                                Remove from set\r\n                                </UnderMenuItemTextElement>\r\n                            <TransferIconElement width=\"18px\" />\r\n                        </UnderMenuItemElement>\r\n                        {word?.imgUrl && <UnderMenuItemElement onClick={onShowImageClick({\r\n                            eng: word.eng,\r\n                            rus: word.rus,\r\n                            url: word.imgUrl\r\n                        })}>\r\n                            <UnderMenuItemTextElement>\r\n                                Show image\r\n                                </UnderMenuItemTextElement>\r\n                            <ImageIconElement width=\"18px\" />\r\n                        </UnderMenuItemElement>}\r\n                    </>}\r\n                        isMenuOpened={openedMenuStatus?.opened && openedMenuStatus?.id === word._id}\r\n                        handleIconClick={onIconClick(word._id)} />\r\n                </WordCardContainerElement>\r\n            ) || <NoWordsElement>No words yet :(</NoWordsElement>}\r\n            {shownImageUrl.url && <>\r\n                <ZIndexLayer onClick={closeImageView} />\r\n                <FullImageContainerElement>\r\n                    <FullImageElement src={shownImageUrl.url} alt=\"Word picture\" />\r\n                    <FullImageAdditionalInfoElement>\r\n                        {shownImageUrl.eng} | {shownImageUrl.rus}\r\n                    </FullImageAdditionalInfoElement>\r\n                </FullImageContainerElement>\r\n            </>}\r\n        </WordsContainerElement>\r\n    </div >\r\n};\r\n\r\n","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\FlipCard\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\FlipCard\\FlipCard.tsx",["477","478","479"],"import React, { useCallback, useState } from 'react';\r\nimport { UnderMenuItemElement, UnderMenuItemTextElement, UnderMenu } from '..';\r\nimport ZIndexLayer from '../ZIndexLayer';\r\nimport {\r\n    SceneElement, CardElement, CardFaceFrontElement,\r\n    CardFaceBackElement, IconContainerElement, DotIconElement,\r\n} from './elements';\r\n\r\n\r\ninterface IFlipCardProps {\r\n    frontText?: string;\r\n    backText?: string;\r\n    frontIcon?: React.ReactNode,\r\n    backIcon?: React.ReactNode,\r\n    handleIconClick?: () => void;\r\n    isMenuOpened?: boolean;\r\n    innerMenu?: React.ReactNode,\r\n}\r\n\r\n//https://3dtransforms.desandro.com/card-flip\r\n\r\nexport const FlipCard: React.FC<IFlipCardProps> = ({ frontText, backText, handleIconClick, isMenuOpened = false, innerMenu }) => {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    const onIconClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        e.stopPropagation();\r\n        // setIsMenuOpened(status => !status);\r\n        if (handleIconClick) {\r\n            handleIconClick();\r\n        }\r\n    }, [handleIconClick]);\r\n\r\n    // const closeMenu = useCallback(() => {\r\n    //     setIsMenuOpened(false);\r\n    // }, [setIsMenuOpened])\r\n\r\n    return <>\r\n        {/* {isMenuOpened && <ZIndexLayer onClick={closeMenu} />} */}\r\n        <UnderMenu innerMenu={innerMenu} isMenuOpened={isMenuOpened}>\r\n            <SceneElement onClick={() => setIsFlipped(status => !status)}>\r\n                <CardElement isFlipped={isFlipped}>\r\n                    <CardFaceFrontElement>\r\n                        {frontText}\r\n                        {<IconContainerElement onClick={onIconClick}>\r\n                            <DotIconElement width=\"30px\" height=\"20px\" className=\"front\" />\r\n                        </IconContainerElement>}\r\n                    </CardFaceFrontElement>\r\n                    <CardFaceBackElement>\r\n                        {backText}\r\n                        {<IconContainerElement onClick={onIconClick}>\r\n                            <DotIconElement width=\"30px\" height=\"20px\" className=\"back\" />\r\n                        </IconContainerElement>}\r\n                    </CardFaceBackElement>\r\n                </CardElement>\r\n            </SceneElement>\r\n        </UnderMenu>\r\n    </>\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\FlipCard\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\hooks\\keyHandler.ts",["480","481"],"// @ts-nocheck\r\nimport React, { useEffect } from 'react';\r\n\r\nexport function useKeyboardEvent(key: string, callback: Function, updateArray?: Array<any>) {\r\n    useEffect(() => {\r\n        const handler = function (event: React.KeyboardEvent) {\r\n            if (event.key === key) {\r\n                callback && callback();\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handler);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    }, updateArray?.length ? updateArray : []);\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\index.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\SnackbarContainer.tsx",["482","483"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectIsSnackbarOpened, selectIsSnackbarSuccess, selectSnackbarText } from '../../store/app/selectors';\r\nimport { resetSnackbarAction } from '../../store/app/slice';\r\nimport { Snackbar } from './Snackbar';\r\n\r\nexport const SnackbarContainer: React.FC<{}> = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const isOpened = useSelector(selectIsSnackbarOpened);\r\n    const isSuccess = useSelector(selectIsSnackbarSuccess);\r\n    const text = useSelector(selectSnackbarText);\r\n\r\n    const clickHandler = useCallback(() => {\r\n        dispatch(resetSnackbarAction());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (isOpened) {\r\n            setTimeout(() => {\r\n                dispatch(resetSnackbarAction());\r\n            }, 3000);\r\n        }\r\n    }, [isOpened]);\r\n\r\n    return isOpened ? <Snackbar text={text} isSuccess={isSuccess} onClick={clickHandler} /> : null;\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\Snackbar.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\Snackbar\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\app\\slice.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\app\\selectors.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\store\\wordsSet\\types.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetsPage\\SetCard.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\UnderMenu\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\UnderMenu\\UnderMenu.tsx",["484","485"],"import React from 'react';\r\nimport { FullUnderMenuContainerElement, MainContainerElement, UnderMenuContainerElement, UnderMenuItemElement, UnderMenuItemTextElement } from './elements';\r\n\r\nexport interface IUnderMenuProps {\r\n    innerMenu: React.ReactNode;\r\n    isMenuOpened: boolean;\r\n}\r\n\r\nexport const UnderMenu: React.FC<IUnderMenuProps> = ({ innerMenu, children, isMenuOpened }) => {\r\n    return <FullUnderMenuContainerElement>\r\n        <MainContainerElement className={isMenuOpened ? 'opened-menu' : ''}>\r\n            {children}\r\n        </MainContainerElement>\r\n        {isMenuOpened && <UnderMenuContainerElement>\r\n            {innerMenu}\r\n        </UnderMenuContainerElement>}\r\n    </FullUnderMenuContainerElement>\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\SetInfo.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\WordsBlockHeader.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\CopyToSetForm.tsx",["486","487","488","489","490"],"import { Formik } from 'formik';\r\nimport React, { useCallback } from 'react';\r\nimport { Input, Modal, Select } from '../../shared';\r\nimport { IWordsShortServerSet } from '../../store/wordsSet/types';\r\nimport { CopyToSetFormContainerElement, CopyToSetFormElement } from './elements';\r\nimport { ICopyToSetSchema, copyToSetSchema, copyToSetValidate } from './schemas';\r\n\r\nexport interface ICopyToSetFormProps {\r\n    isOpened: boolean;\r\n    setsList: IWordsShortServerSet[];\r\n    toggleStatus: () => void;\r\n    onSave: (values: ICopyToSetSchema) => void;\r\n    onEsc: () => void;\r\n}\r\n\r\nexport const CopyToSetForm: React.FC<ICopyToSetFormProps> = ({ isOpened, toggleStatus, onSave, onEsc, setsList }) => {\r\n    const handleSave = useCallback((values) => () => onSave(values), [onSave])\r\n\r\n    return isOpened && <Formik initialValues={copyToSetSchema} onSubmit={onSave} validate={copyToSetValidate} >\r\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) =>\r\n            <Modal\r\n                onEsc={onEsc}\r\n                isOpened={isOpened}\r\n                title=\"Copy to set\"\r\n                onCancelClick={toggleStatus}\r\n                onSave={handleSave(values)}\r\n                onClickOutside={toggleStatus}>\r\n                <CopyToSetFormContainerElement>\r\n                    <CopyToSetFormElement autoComplete=\"off\">\r\n                        <Select\r\n                            label=\"Set *\"\r\n                            id=\"setId\"\r\n                            name=\"setId\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.setId}\r\n                            error={touched?.setId && errors?.setId || ''}\r\n\r\n                        >\r\n                            <option key=\"empty-element\" value=\"\" disabled hidden></option>\r\n                            {setsList?.map(\r\n                                (wordsSet) =>\r\n                                    <option key={wordsSet._id} value={wordsSet._id}>{wordsSet.name}</option>\r\n                            )}\r\n                        </Select>\r\n                    </CopyToSetFormElement>\r\n                </CopyToSetFormContainerElement>\r\n            </Modal>}\r\n    </Formik> || null;\r\n}","D:\\words_app\\app\\client\\redux-toolkit\\src\\components\\SetPage\\schemas.ts",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ImageView\\ImageView.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\components\\ImageView\\elements.tsx",[],"D:\\words_app\\app\\client\\redux-toolkit\\src\\shared\\styles\\keyframes.ts",[],{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":11,"column":1,"nodeType":"497","endLine":11,"endColumn":40},{"ruleId":"498","severity":1,"message":"499","line":1,"column":10,"nodeType":"500","messageId":"501","endLine":1,"endColumn":22},{"ruleId":"498","severity":1,"message":"502","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":18},{"ruleId":"498","severity":1,"message":"503","line":5,"column":10,"nodeType":"500","messageId":"501","endLine":5,"endColumn":34},{"ruleId":"498","severity":1,"message":"504","line":6,"column":32,"nodeType":"500","messageId":"501","endLine":6,"endColumn":38},{"ruleId":"495","severity":1,"message":"505","line":46,"column":1,"nodeType":"497","endLine":50,"endColumn":3},{"ruleId":"498","severity":1,"message":"506","line":1,"column":30,"nodeType":"500","messageId":"501","endLine":1,"endColumn":37},{"ruleId":"495","severity":1,"message":"496","line":1,"column":1,"nodeType":"497","endLine":18,"endColumn":2},{"ruleId":"498","severity":1,"message":"507","line":2,"column":36,"nodeType":"500","messageId":"501","endLine":2,"endColumn":41},{"ruleId":"498","severity":1,"message":"508","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":28},{"ruleId":"509","severity":1,"message":"510","line":53,"column":8,"nodeType":"511","endLine":53,"endColumn":45,"suggestions":"512"},{"ruleId":"509","severity":1,"message":"513","line":58,"column":8,"nodeType":"511","endLine":58,"endColumn":45,"suggestions":"514"},{"ruleId":"498","severity":1,"message":"515","line":1,"column":17,"nodeType":"500","messageId":"501","endLine":1,"endColumn":28},{"ruleId":"498","severity":1,"message":"516","line":9,"column":8,"nodeType":"500","messageId":"501","endLine":9,"endColumn":14},{"ruleId":"498","severity":1,"message":"517","line":11,"column":26,"nodeType":"500","messageId":"501","endLine":11,"endColumn":42},{"ruleId":"498","severity":1,"message":"518","line":12,"column":10,"nodeType":"500","messageId":"501","endLine":12,"endColumn":35},{"ruleId":"498","severity":1,"message":"519","line":13,"column":10,"nodeType":"500","messageId":"501","endLine":13,"endColumn":19},{"ruleId":"498","severity":1,"message":"520","line":17,"column":10,"nodeType":"500","messageId":"501","endLine":17,"endColumn":31},{"ruleId":"521","severity":1,"message":"522","line":58,"column":21,"nodeType":"523","messageId":"524","endLine":58,"endColumn":23},{"ruleId":"521","severity":1,"message":"522","line":58,"column":44,"nodeType":"523","messageId":"524","endLine":58,"endColumn":46},{"ruleId":"498","severity":1,"message":"525","line":2,"column":28,"nodeType":"500","messageId":"501","endLine":2,"endColumn":36},{"ruleId":"498","severity":1,"message":"526","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":30},{"ruleId":"498","severity":1,"message":"527","line":5,"column":10,"nodeType":"500","messageId":"501","endLine":5,"endColumn":26},{"ruleId":"498","severity":1,"message":"528","line":2,"column":8,"nodeType":"500","messageId":"501","endLine":2,"endColumn":13},{"ruleId":"498","severity":1,"message":"529","line":2,"column":17,"nodeType":"500","messageId":"501","endLine":2,"endColumn":23},{"ruleId":"509","severity":1,"message":"530","line":25,"column":8,"nodeType":"511","endLine":25,"endColumn":13,"suggestions":"531"},{"ruleId":"491","replacedBy":"532"},{"ruleId":"493","replacedBy":"533"},{"ruleId":"495","severity":1,"message":"496","line":64,"column":1,"nodeType":"497","endLine":64,"endColumn":19},{"ruleId":"509","severity":1,"message":"534","line":36,"column":8,"nodeType":"511","endLine":36,"endColumn":28,"suggestions":"535"},{"ruleId":"509","severity":1,"message":"536","line":45,"column":8,"nodeType":"511","endLine":45,"endColumn":16,"suggestions":"537"},{"ruleId":"521","severity":1,"message":"522","line":69,"column":16,"nodeType":"523","messageId":"524","endLine":69,"endColumn":18},{"ruleId":"521","severity":1,"message":"522","line":69,"column":66,"nodeType":"523","messageId":"524","endLine":69,"endColumn":68},{"ruleId":"521","severity":1,"message":"522","line":39,"column":51,"nodeType":"523","messageId":"524","endLine":39,"endColumn":53},{"ruleId":"521","severity":1,"message":"522","line":39,"column":68,"nodeType":"523","messageId":"524","endLine":39,"endColumn":70},{"ruleId":"521","severity":1,"message":"522","line":49,"column":54,"nodeType":"523","messageId":"524","endLine":49,"endColumn":56},{"ruleId":"521","severity":1,"message":"522","line":49,"column":74,"nodeType":"523","messageId":"524","endLine":49,"endColumn":76},{"ruleId":"498","severity":1,"message":"538","line":5,"column":10,"nodeType":"500","messageId":"501","endLine":5,"endColumn":29},{"ruleId":"498","severity":1,"message":"539","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":14},{"ruleId":"498","severity":1,"message":"540","line":4,"column":10,"nodeType":"500","messageId":"501","endLine":4,"endColumn":14},{"ruleId":"498","severity":1,"message":"541","line":7,"column":10,"nodeType":"500","messageId":"501","endLine":7,"endColumn":31},{"ruleId":"498","severity":1,"message":"542","line":7,"column":55,"nodeType":"500","messageId":"501","endLine":7,"endColumn":78},{"ruleId":"498","severity":1,"message":"543","line":7,"column":80,"nodeType":"500","messageId":"501","endLine":7,"endColumn":91},{"ruleId":"509","severity":1,"message":"544","line":21,"column":8,"nodeType":"511","endLine":21,"endColumn":10,"suggestions":"545"},{"ruleId":"498","severity":1,"message":"515","line":1,"column":10,"nodeType":"500","messageId":"501","endLine":1,"endColumn":21},{"ruleId":"498","severity":1,"message":"546","line":1,"column":23,"nodeType":"500","messageId":"501","endLine":1,"endColumn":31},{"ruleId":"521","severity":1,"message":"522","line":17,"column":21,"nodeType":"523","messageId":"524","endLine":17,"endColumn":23},{"ruleId":"521","severity":1,"message":"522","line":35,"column":50,"nodeType":"523","messageId":"524","endLine":35,"endColumn":52},{"ruleId":"521","severity":1,"message":"522","line":35,"column":66,"nodeType":"523","messageId":"524","endLine":35,"endColumn":68},{"ruleId":"521","severity":1,"message":"522","line":45,"column":57,"nodeType":"523","messageId":"524","endLine":45,"endColumn":59},{"ruleId":"521","severity":1,"message":"522","line":45,"column":80,"nodeType":"523","messageId":"524","endLine":45,"endColumn":82},{"ruleId":"521","severity":1,"message":"522","line":50,"column":15,"nodeType":"523","messageId":"524","endLine":50,"endColumn":17},{"ruleId":"498","severity":1,"message":"528","line":1,"column":8,"nodeType":"500","messageId":"501","endLine":1,"endColumn":13},{"ruleId":"509","severity":1,"message":"547","line":21,"column":8,"nodeType":"511","endLine":21,"endColumn":10,"suggestions":"548"},{"ruleId":"509","severity":1,"message":"547","line":25,"column":8,"nodeType":"511","endLine":25,"endColumn":10,"suggestions":"549"},{"ruleId":"509","severity":1,"message":"547","line":29,"column":8,"nodeType":"511","endLine":29,"endColumn":10,"suggestions":"550"},{"ruleId":"495","severity":1,"message":"505","line":72,"column":1,"nodeType":"497","endLine":79,"endColumn":3},{"ruleId":"498","severity":1,"message":"551","line":1,"column":10,"nodeType":"500","messageId":"501","endLine":1,"endColumn":19},{"ruleId":"521","severity":1,"message":"522","line":19,"column":21,"nodeType":"523","messageId":"524","endLine":19,"endColumn":23},{"ruleId":"521","severity":1,"message":"522","line":37,"column":49,"nodeType":"523","messageId":"524","endLine":37,"endColumn":51},{"ruleId":"521","severity":1,"message":"522","line":37,"column":64,"nodeType":"523","messageId":"524","endLine":37,"endColumn":66},{"ruleId":"521","severity":1,"message":"522","line":46,"column":49,"nodeType":"523","messageId":"524","endLine":46,"endColumn":51},{"ruleId":"521","severity":1,"message":"522","line":46,"column":64,"nodeType":"523","messageId":"524","endLine":46,"endColumn":66},{"ruleId":"521","severity":1,"message":"522","line":62,"column":51,"nodeType":"523","messageId":"524","endLine":62,"endColumn":53},{"ruleId":"521","severity":1,"message":"522","line":62,"column":68,"nodeType":"523","messageId":"524","endLine":62,"endColumn":70},{"ruleId":"521","severity":1,"message":"522","line":78,"column":52,"nodeType":"523","messageId":"524","endLine":78,"endColumn":54},{"ruleId":"521","severity":1,"message":"522","line":78,"column":70,"nodeType":"523","messageId":"524","endLine":78,"endColumn":72},{"ruleId":"521","severity":1,"message":"522","line":84,"column":15,"nodeType":"523","messageId":"524","endLine":84,"endColumn":17},{"ruleId":"509","severity":1,"message":"534","line":37,"column":8,"nodeType":"511","endLine":37,"endColumn":28,"suggestions":"552"},{"ruleId":"509","severity":1,"message":"536","line":46,"column":8,"nodeType":"511","endLine":46,"endColumn":16,"suggestions":"553"},{"ruleId":"521","severity":1,"message":"522","line":71,"column":16,"nodeType":"523","messageId":"524","endLine":71,"endColumn":18},{"ruleId":"521","severity":1,"message":"522","line":71,"column":68,"nodeType":"523","messageId":"524","endLine":71,"endColumn":70},{"ruleId":"509","severity":1,"message":"544","line":13,"column":8,"nodeType":"511","endLine":13,"endColumn":10,"suggestions":"554"},{"ruleId":"498","severity":1,"message":"555","line":2,"column":10,"nodeType":"500","messageId":"501","endLine":2,"endColumn":25},{"ruleId":"509","severity":1,"message":"544","line":28,"column":8,"nodeType":"511","endLine":28,"endColumn":12,"suggestions":"556"},{"ruleId":"498","severity":1,"message":"507","line":2,"column":20,"nodeType":"500","messageId":"501","endLine":2,"endColumn":25},{"ruleId":"509","severity":1,"message":"557","line":88,"column":8,"nodeType":"511","endLine":88,"endColumn":26,"suggestions":"558"},{"ruleId":"509","severity":1,"message":"559","line":119,"column":8,"nodeType":"511","endLine":119,"endColumn":51,"suggestions":"560"},{"ruleId":"521","severity":1,"message":"522","line":151,"column":28,"nodeType":"523","messageId":"524","endLine":151,"endColumn":30},{"ruleId":"521","severity":1,"message":"522","line":178,"column":15,"nodeType":"523","messageId":"524","endLine":178,"endColumn":17},{"ruleId":"498","severity":1,"message":"561","line":2,"column":10,"nodeType":"500","messageId":"501","endLine":2,"endColumn":30},{"ruleId":"498","severity":1,"message":"562","line":2,"column":32,"nodeType":"500","messageId":"501","endLine":2,"endColumn":56},{"ruleId":"498","severity":1,"message":"563","line":3,"column":8,"nodeType":"500","messageId":"501","endLine":3,"endColumn":19},{"ruleId":"509","severity":1,"message":"564","line":17,"column":8,"nodeType":"565","endLine":17,"endColumn":46},{"ruleId":"509","severity":1,"message":"566","line":17,"column":8,"nodeType":"565","endLine":17,"endColumn":46,"suggestions":"567"},{"ruleId":"498","severity":1,"message":"546","line":1,"column":41,"nodeType":"500","messageId":"501","endLine":1,"endColumn":49},{"ruleId":"509","severity":1,"message":"544","line":24,"column":8,"nodeType":"511","endLine":24,"endColumn":18,"suggestions":"568"},{"ruleId":"498","severity":1,"message":"561","line":2,"column":90,"nodeType":"500","messageId":"501","endLine":2,"endColumn":110},{"ruleId":"498","severity":1,"message":"562","line":2,"column":112,"nodeType":"500","messageId":"501","endLine":2,"endColumn":136},{"ruleId":"498","severity":1,"message":"569","line":3,"column":10,"nodeType":"500","messageId":"501","endLine":3,"endColumn":15},{"ruleId":"521","severity":1,"message":"522","line":19,"column":21,"nodeType":"523","messageId":"524","endLine":19,"endColumn":23},{"ruleId":"521","severity":1,"message":"522","line":37,"column":51,"nodeType":"523","messageId":"524","endLine":37,"endColumn":53},{"ruleId":"521","severity":1,"message":"522","line":37,"column":68,"nodeType":"523","messageId":"524","endLine":37,"endColumn":70},{"ruleId":"521","severity":1,"message":"522","line":49,"column":15,"nodeType":"523","messageId":"524","endLine":49,"endColumn":17},"no-native-reassign",["570"],"no-negated-in-lhs",["571"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'selectIsAuth' is defined but never used.","Identifier","unusedVar","'getToken' is defined but never used.","'ActionCreatorWithPayload' is defined but never used.","'Effect' is defined but never used.","Assign array to a variable before exporting as module default","'useMemo' is defined but never used.","'Modal' is defined but never used.","'AddInCircleElement' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'toggleAddSetOpenedStatus'. Either include it or remove the dependency array.","ArrayExpression",["572"],"React Hook useCallback has a missing dependency: 'onAddWord'. Either include it or remove the dependency array. If 'onAddWord' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["573"],"'useCallback' is defined but never used.","'Header' is defined but never used.","'logoutUserAction' is defined but never used.","'selectCurrentUserFullName' is defined but never used.","'LoginPage' is defined but never used.","'loadAllUserSetsAction' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'UserIcon' is defined but never used.","'useOutsideClickCheck' is defined but never used.","'DropDownMenuItem' is defined but never used.","'React' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["574"],["570"],["571"],"React Hook useCallback has a missing dependency: 'onChangeValue'. Either include it or remove the dependency array. If 'onChangeValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["575"],"React Hook useCallback has a missing dependency: 'onBlurValue'. Either include it or remove the dependency array. If 'onBlurValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["576"],"'RouteComponentProps' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'SetDescriptionElement' is defined but never used.","'SetCardContainerElement' is defined but never used.","'LinkElement' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["577"],"'useState' is defined but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["578"],["579"],["580"],"'IWordsSet' is defined but never used.",["581"],["582"],["583"],"'wordsSetReducer' is defined but never used.",["584"],"React Hook useCallback has a missing dependency: 'closeMenu'. Either include it or remove the dependency array.",["585"],"React Hook useCallback has a missing dependency: 'removeFromSet'. Either include it or remove the dependency array. If 'removeFromSet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["586"],"'UnderMenuItemElement' is defined but never used.","'UnderMenuItemTextElement' is defined but never used.","'ZIndexLayer' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ConditionalExpression","React Hook useEffect has missing dependencies: 'callback' and 'key'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["587"],["588"],"'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"599","fix":"601"},{"desc":"599","fix":"602"},{"desc":"599","fix":"603"},{"desc":"595","fix":"604"},{"desc":"597","fix":"605"},{"desc":"599","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},"Update the dependencies array to be: [onAddSet, toggleAddSetOpenedStatus]",{"range":"617","text":"618"},"Update the dependencies array to be: [onAddWord, toggleAddWordOpenedStatus]",{"range":"619","text":"620"},"Update the dependencies array to be: [cb, ref]",{"range":"621","text":"622"},"Update the dependencies array to be: [onChange, onChangeValue]",{"range":"623","text":"624"},"Update the dependencies array to be: [onBlur, onBlurValue]",{"range":"625","text":"626"},"Update the dependencies array to be: [dispatch]",{"range":"627","text":"628"},{"range":"629","text":"628"},{"range":"630","text":"628"},{"range":"631","text":"628"},{"range":"632","text":"624"},{"range":"633","text":"626"},{"range":"634","text":"628"},"Update the dependencies array to be: [dispatch, id]",{"range":"635","text":"636"},"Update the dependencies array to be: [closeMenu]",{"range":"637","text":"638"},"Update the dependencies array to be: [openedMenuStatus.opened, openedMenuStatus.id, removeFromSet, currentSetId, closeMenu]",{"range":"639","text":"640"},"Update the dependencies array to be: [callback, key]",{"range":"641","text":"642"},"Update the dependencies array to be: [dispatch, isOpened]",{"range":"643","text":"644"},[2136,2173],"[onAddSet, toggleAddSetOpenedStatus]",[2322,2359],"[onAddWord, toggleAddWordOpenedStatus]",[776,781],"[cb, ref]",[1064,1084],"[onChange, onChangeValue]",[1351,1359],"[onBlur, onBlurValue]",[968,970],"[dispatch]",[902,904],[1028,1030],[1152,1154],[1097,1117],[1385,1393],[492,494],[1389,1393],"[dispatch, id]",[2728,2746],"[closeMenu]",[3647,3690],"[openedMenuStatus.opened, openedMenuStatus.id, removeFromSet, currentSetId, closeMenu]",[510,548],"[callback, key]",[891,901],"[dispatch, isOpened]"]